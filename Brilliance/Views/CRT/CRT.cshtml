@using Brilliance.Infrastructure
@model Brilliance.Models.ViewModel.ComplaintViewModel
@{
    /**/

    ViewBag.Title = "CRT";
    Layout = "~/Views/Shared/_Layout_public.cshtml";

    int index = 0;
}
@*<link href="~/assets/global/plugins/bootstrap-summernote/summernote.css" rel="stylesheet" type="text/css" />

    <link href="~/assets/global/plugins/select2/css/select2.min.css" rel="stylesheet" type="text/css" />
    <link href="~/assets/global/plugins/select2/css/select2-bootstrap.min.css" rel="stylesheet" type="text/css" />*@
<link href="~/assets/global/plugins/bootstrap-datepicker/css/bootstrap-datepicker.min.css" rel="stylesheet" />
<style>
    .dropdown-menu open {
        position: sticky;
    }

    .required11:after {
        content: "*";
        font-weight: bold;
        color: red;
    }

    .abc {
        margin-bottom: -11px;
    }
</style>
@if (Model != null && Model.complaint != null && Model.complaint.IsResolved.ToUpper() == "NEW" && Model.complaint.ComplaintType.ToUpper() == "WEB SUBMISSION")
{
    var status = Model.complaint.ComplaintType.ToUpper();
}
<div class="page-content page-content-dashbrd-backgrnd">
    <div class="page-bar margin-bottom-10">
        <div class="row">
            <div class="col-md-12 padding-out">
                <div class="portlet light padding-header margin-0 custom-padding-bar">
                    <div class="portlet-title portlet-title-Project-custom">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="caption font-dark">
                                    <i class="icon-settings font-dark"></i>
                                    <span class="caption-subject bold uppercase" style="font-size:16px;">Complaints Reporting Tool</span>
                                </div>
                                @*<div class="uppercase" style="margin-top:25px;font-size:16px;color:#153e62">Complaints Register - September 2019</div>*@
                                <div style="margin-top:25px;font-size:19px;color:#153E62;">Complaint Details</div>
                            </div>
                            <div class="col-md-6">
                                <img class="img-responsive pull-right" src="~/assets/global/img/Guard-risk.jpg" style="max-width: 250px; max-height: 110px; line-height: 20px;margin-left:350px;" alt="">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div>
        <span style="font-size: 9px;">Please save your changes by clicking on the Save button to prevent data loss.</span>
    </div>
    <div class="row" style="margin-left:-25px;margin-right:-25px;margin-top:-5px;">
        <div class="col-lg-12">
            <div class="portlet light bordered">
                <div class="portlet-title tabbable-line">
                    <ul class="nav nav-tabs employee employeeedit">
                        <li class="active">
                            <a href="#tab1" id="m_tabs_5_1">
                                Complaint Detail
                            </a>
                        </li>
                        @*@if (Model != null && Model.complaint != null && Model.complaint.IsResolved.ToUpper() == "NEW")*@
                        @if (Model != null && Model.complaint != null && Model.complaint.ComplaintType.ToUpper() == "WEB SUBMISSION")
                        {
                            <li>
                                <a href="#tab2" id="m_tabs_5_2" class="hide">
                                    Complaint Resolution
                                </a>
                            </li>
                            @*<li>
                                    <a href="#tab3" id="m_tabs_5_3" class="hide">
                                        Claims
                                    </a>
                                </li>*@
                        }
                        else
                        {
                            <li>
                                <a href="#tab2" id="m_tabs_5_2">
                                    Complaint Resolution
                                </a>
                            </li>
                            @*<li>
                                    <a href="#tab3" id="m_tabs_5_3">
                                        Claims
                                    </a>
                                </li>*@
                        }
                    </ul>
                </div>
                <div class="portlet-body form">
                    @*<form action="/CRT/SaveComplaint" id="frmComplaint" data-ajax-success="SaveComplaintResponse(data);" data-ajax="true" data-ajax-method="Post" data-ajax-begin="ShowLoader();">*@
                    <form action="/CRT/SaveComplaint" id="frmComplaint" method="post" enctype="multipart/form-data">
                        <div class="tab-pane active" id="profile-edit">
                            <div class="row">
                                <div class="col-md-12">
                                    @Html.HiddenFor(m => m.complaint.ComplaintID)
                                    <div class="tab-content">
                                        <div class="tab-pane active" id="tab1" role="tabpanel">
                                            <div class="form-body">
                                                @*@if (Model != null && Model.complaint != null && (Model.complaint.IsResolved.ToUpper() == "NEW" || Model.complaint.IsComplaint.ToUpper() == "NO"))*@
                                                @if (Model != null && Model.complaint != null && Model.complaint.ComplaintType.ToUpper() == "WEB SUBMISSION")
                                                {
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.Tier2 != null && Model.Labelconfig.Tier2 != "")
                                                                {
                                                                    <label>@Model.Labelconfig.Tier2<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                else
                                                                {
                                                                    <label>Tier2<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                @Html.DropDownListFor(m => m.complaint.CompanyId, new SelectList(Model.CompanyList, "Value", "Text", 0), "--Select Company--", new { @data_live_search = "true", @class = "form-control bs-select", @onchange = "Getdata(this);", @disabled = "disabled" })
                                                                @Html.ValidationMessageFor(m => m.complaint.CompanyId)
                                                            </div>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.Tier3 != null && Model.Labelconfig.Tier3 != "")
                                                                {
                                                                    <label>@Model.Labelconfig.Tier3<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                else
                                                                {
                                                                    <label>Tier3<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                @Html.DropDownListFor(m => m.complaint.DivisionId, new SelectList(Model.DivisionList, "Value", "Text", 0), "--Select Division--", new { @data_live_search = "true", @class = "form-control bs-select", @disabled = "disabled" })
                                                                @Html.ValidationMessageFor(m => m.complaint.DivisionId)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            <div class="row">
                                                                <div class="col-md-9">
                                                                    <div class="form-group">
                                                                        @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.Tier3 != null && Model.Labelconfig.Tier3 != "")
                                                                        {
                                                                            <label>@Model.Labelconfig.Tier3</label>
                                                                        }
                                                                        else
                                                                        {
                                                                            <label>Policy/Account number</label>
                                                                        }
                                                                        @Html.TextBoxFor(m => m.complaint.PolicyNumber, new { @class = "form-control m-input", @placeholder = "Enter policy number", @disabled = "disabled" })
                                                                        @Html.ValidationMessageFor(m => m.complaint.PolicyNumber)
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-3" style="margin-top:25px;">
                                                                    <div class="form-group">
                                                                        <label class="mt-checkbox mt-checkbox-outline" style="font-size:13px;">
                                                                            Not a client
                                                                            @Html.CheckBoxFor(m => m.complaint.IsClient, new { @onclick = "Chkclient(this);", @disabled = "disabled" })
                                                                            <span></span>
                                                                        </label>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                <label>ID number</label>
                                                                @Html.TextBoxFor(m => m.complaint.ClientIdentificationNumber, new { @class = "form-control m-input", @placeholder = "Enter ID number", @disabled = "disabled" })
                                                                @*@Html.ValidationMessageFor(m => m.complaint.ClientIdentificationNumber)*@
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                <label>First Name</label>
                                                                @Html.TextBoxFor(m => m.complaint.FirstName, new { @class = "form-control m-input", @placeholder = "Enter first name", @disabled = "disabled" })
                                                                @Html.ValidationMessageFor(m => m.complaint.FirstName)
                                                            </div>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                <label>Last Name</label>
                                                                @Html.TextBoxFor(m => m.complaint.LastName, new { @class = "form-control m-input", @placeholder = "Enter last name", @disabled = "disabled" })
                                                                @Html.ValidationMessageFor(m => m.complaint.LastName)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.contactno != null && Model.Labelconfig.contactno != "")
                                                                {
                                                                    <label>@Model.Labelconfig.contactno</label>
                                                                }
                                                                else
                                                                {
                                                                    <label>Contact number</label>
                                                                }
                                                                @Html.TextBoxFor(m => m.complaint.PhoneNo, new { @class = "form-control m-input", @placeholder = "Enter contat no.", @disabled = "disabled" })
                                                                @Html.ValidationMessageFor(m => m.complaint.PhoneNo)
                                                            </div>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.emailaddress != null && Model.Labelconfig.emailaddress != "")
                                                                {
                                                                    <label>@Model.Labelconfig.emailaddress</label>
                                                                }
                                                                else
                                                                {
                                                                    <label>Email address</label>
                                                                }
                                                                @Html.TextBoxFor(m => m.complaint.Email, new { @class = "form-control email m-input", @placeholder = "Enter email", @disabled = "disabled" })
                                                                @Html.ValidationMessageFor(m => m.complaint.Email)
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.Tier2 != null && Model.Labelconfig.Tier2 != "")
                                                                {
                                                                    <label>@Model.Labelconfig.Tier2<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                else
                                                                {
                                                                    <label>Tier2<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                @Html.DropDownListFor(m => m.complaint.CompanyId, new SelectList(Model.CompanyList, "Value", "Text", 0), "--Select Company--", new { @data_live_search = "true", @class = "form-control bs-select", @onchange = "Getdata(this);" })
                                                                @Html.ValidationMessageFor(m => m.complaint.CompanyId)
                                                            </div>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.Tier3 != null && Model.Labelconfig.Tier3 != "")
                                                                {
                                                                    <label>@Model.Labelconfig.Tier3<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                else
                                                                {
                                                                    <label>Tier3<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                @Html.DropDownListFor(m => m.complaint.DivisionId, new SelectList(Model.DivisionList, "Value", "Text", 0), "--Select Division--", new { @data_live_search = "true", @class = "form-control bs-select" })
                                                                @Html.ValidationMessageFor(m => m.complaint.DivisionId)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            <div class="row">
                                                                <div class="col-md-9">
                                                                    <div class="form-group">
                                                                        @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.Accnumber != null && Model.Labelconfig.Accnumber != "")
                                                                        {
                                                                            <label>@Model.Labelconfig.Accnumber<span style="font-weight: bold;color: red;">*</span></label>
                                                                        }
                                                                        else
                                                                        {
                                                                            <label>Account number</label>
                                                                        }
                                                                        @Html.TextBoxFor(m => m.complaint.PolicyNumber, new { @class = "form-control m-input", @placeholder = "Enter policy number" })
                                                                        @Html.ValidationMessageFor(m => m.complaint.PolicyNumber)
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-3" style="margin-top:25px;">
                                                                    <div class="form-group">
                                                                        <label class="mt-checkbox mt-checkbox-outline" style="font-size:13px;">
                                                                            Not a client
                                                                            @Html.CheckBoxFor(m => m.complaint.IsClient, new { @onclick = "Chkclient(this);" })
                                                                            <span></span>
                                                                        </label>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.Idnumber != null && Model.Labelconfig.Idnumber != "")
                                                                {
                                                                    <label>@Model.Labelconfig.Idnumber</label>
                                                                }
                                                                else
                                                                {
                                                                    <label>ID number</label>
                                                                }
                                                                @Html.TextBoxFor(m => m.complaint.ClientIdentificationNumber, new { @class = "form-control m-input", @placeholder = "Enter ID number" })
                                                                @*@Html.ValidationMessageFor(m => m.complaint.ClientIdentificationNumber)*@
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                <label>First Name</label>
                                                                @Html.TextBoxFor(m => m.complaint.FirstName, new { @class = "form-control m-input", @placeholder = "Enter first name" })
                                                                @Html.ValidationMessageFor(m => m.complaint.FirstName)
                                                            </div>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                <label>Last Name</label>
                                                                @Html.TextBoxFor(m => m.complaint.LastName, new { @class = "form-control m-input", @placeholder = "Enter last name" })
                                                                @Html.ValidationMessageFor(m => m.complaint.LastName)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.contactno != null && Model.Labelconfig.contactno != "")
                                                                {
                                                                    <label>@Model.Labelconfig.contactno</label>
                                                                }
                                                                else
                                                                {
                                                                    <label>Contact number</label>
                                                                }
                                                                @Html.TextBoxFor(m => m.complaint.PhoneNo, new { @class = "form-control m-input", @placeholder = "Enter contat no." })
                                                                @Html.ValidationMessageFor(m => m.complaint.PhoneNo)
                                                            </div>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.emailaddress != null && Model.Labelconfig.emailaddress != "")
                                                                {
                                                                    <label>@Model.Labelconfig.emailaddress</label>
                                                                }
                                                                else
                                                                {
                                                                    <label>Email address</label>
                                                                }
                                                                @Html.TextBoxFor(m => m.complaint.Email, new { @class = "form-control email m-input", @placeholder = "Enter email" })
                                                                @Html.ValidationMessageFor(m => m.complaint.Email)
                                                            </div>
                                                        </div>
                                                    </div>
                                                }

                                                <div class="row">
                                                    @if (Model != null && Model.client != null && Model.client.IsViewDissatisfationLevel == true)
                                                    {
                                                        <div class="col-md-6" id="DisSatisfactionLevel">
                                                            <div class="form-group">
                                                                @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.DissatisfactionLevel != null && Model.Labelconfig.DissatisfactionLevel != "")
                                                                {
                                                                    <label>@Model.Labelconfig.DissatisfactionLevel</label>
                                                                }
                                                                else
                                                                {
                                                                    <label>Level of dissatisfaction</label>
                                                                }
                                                                @*@if (Model != null && Model.complaint != null && (Model.complaint.IsResolved.ToUpper() == "NEW" || Model.complaint.IsComplaint.ToUpper() == "NO"))*@
                                                                @if (Model != null && Model.complaint != null && Model.complaint.ComplaintType.ToUpper() == "WEB SUBMISSION")
                                                                {
                                                                    @Html.DropDownListFor(m => m.complaint.SatisfactionLevel, new SelectList(Model.DisatisfactionLevelList, "Value", "Text", 0), "--Select dissatisfaction level--", new { @data_live_search = "true", @class = "form-control bs-select", @onchange = "chkLevelOfDissatisfaction(this);", @disabled = "disabled" })
                                                                }
                                                                else
                                                                {
                                                                    @Html.DropDownListFor(m => m.complaint.SatisfactionLevel, new SelectList(Model.DisatisfactionLevelList, "Value", "Text", 0), "--Select dissatisfaction level--", new { @data_live_search = "true", @class = "form-control bs-select", @onchange = "chkLevelOfDissatisfaction(this);" })
                                                                    @Html.ValidationMessageFor(m => m.complaint.SatisfactionLevel)
                                                                }

                                                            </div>
                                                        </div>
                                                    }

                                                    @*@if (Model != null && Model.complaint != null && (Model.complaint.IsResolved.ToUpper() == "NEW" || Model.complaint.IsComplaint.ToUpper() == "NO"))*@
                                                    @if (Model != null && Model.complaint != null && Model.complaint.ComplaintType.ToUpper() == "WEB SUBMISSION")
                                                    {
                                                        <div class="col-md-6">
                                                            <div class="row">
                                                                <div class="col-md-4">
                                                                    <label>Is this a complaint?</label>
                                                                    <div class="mt-radio-inline">
                                                                        <label class="mt-radio mt-radio-outline margin-bottom0" style="font-size:13px;">
                                                                            @Html.RadioButtonFor(m => m.complaint.IsComplaint, "Yes", new { @class = "class1" })
                                                                            Yes
                                                                            <span></span>
                                                                        </label>
                                                                        <label class="mt-radio mt-radio-outline margin-bottom0" style="font-size:13px;">
                                                                            @Html.RadioButtonFor(m => m.complaint.IsComplaint, "No", new { @class = "class2" })
                                                                            No
                                                                            <span></span>
                                                                        </label>
                                                                    </div>
                                                                    @Html.ValidationMessageFor(m => m.complaint.IsComplaint)
                                                                </div>
                                                                <div class="col-md-8">
                                                                    <label></label>
                                                                    <div class="input-group">
                                                                        <label>Complaint number : <span style="color:rgba(40, 116, 143, 1);font-weight:bold">BR 00112233</span></label>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                <label></label>
                                                                <div class="input-group">
                                                                    <label>Complaint number : <span style="color:rgba(40, 116, 143, 1);font-weight:bold">BR 00112233</span></label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                </div>
                                                @if (Model != null && Model.complaint != null && Model.complaint.IsEditforNotes == true && Model.NoteList != null && Model.NoteList.Count > 0)
                                                {
                                                    for (int i = 0; i < Model.NoteList.Count; i++)
                                                    {
                                                        var NoteText = "NoteList_" + i + "__NoteText";
                                                        //var Amountid = "NoteList_" + i + "__NoteText";
                                                        <div id="get_Notes">
                                                            <div class="row">
                                                                @Html.Hidden("Index", index - 1)
                                                                <div class="col-md-6">
                                                                    <div class="form-group">
                                                                        <label>File note ID: @Model.NoteList[i].FileNoteID <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>File note date: @Model.NoteList[i].filedate</label>

                                                                        <textarea class="form-control m-input abc" cols="20" id="@NoteText" name="CRTNotes[@i].NoteText" placeholder="Enter Description" rows="2" disabled>@Model.NoteList[i].NoteText</textarea>
                                                                    </div>
                                                                    <label>Author: @Model.NoteList[i].Author</label><br />
                                                                    @if (i == (Model.NoteList.Count - 1))
                                                                    {
                                                                        <button type="button" onclick="Addnewnote();" class="btn default" style="padding: 3px;color: black;background-color: #acb7ca;margin-left: 443px;">Add note</button>
                                                                    }
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <div class="col-lg-4">
                                                                        <div class="form-group">
                                                                            @*<label style="margin-top: 20px;">Upload Attachment</label>*@
                                                                            <label></label>
                                                                            <div class="fileinput margin-0 fileinput-new" data-provides="fileinput">
                                                                                <label style="color:red;" id="VALmassage_@i"></label>
                                                                                @if (Model != null && Model.NoteList != null && !string.IsNullOrEmpty(Model.NoteList[i].FilePath) && File.Exists(HttpContext.Current.Server.MapPath(Constants.ComplaintFilenotePath + Model.NoteList[i].ComplaintID + "/" + Model.NoteList[i].FilePath)))
                                                                                {
                                                                                    @*<img class="img-responsive img-profile image-size-custom" src="@string.Format(Constants.ComplaintFilenotePath.Replace("~","") + Model.NoteList[i].FilePath)">*@
                                                                                    <a target="_blank" href="~/ComplaintFiles/@Model.NoteList[i].ComplaintID/@Model.NoteList[i].FilePath">
                                                                                        <span id="fileid">@Model.NoteList[i].FilePath</span>
                                                                                    </a>
                                                                                }
                                                                                else
                                                                                {
                                                                                    @*<a target="_blank" href="">
                                                                                            <span id="fileid">No file</span>
                                                                                        </a>*@
                                                                                }

                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                @*<div class="col-md-6">
                                                                        <div class="col-lg-4">
                                                                            <div class="form-group">
                                                                                <label style="margin-top: 20px;">Upload Attachment</label>
                                                                                <div class="fileinput margin-0 fileinput-new" data-provides="fileinput">
                                                                                    <span class="btn green btn-file" style="padding: 1px 5px; font-size: 12px;">
                                                                                            <span class="fa fa-upload"></span>
                                                                                            <span class="fileinput-exists"> Change </span>
                                                                                            <input type="file" onchange="Upload(this)" name="@CustID" id="@CustID" rpid="@i" accept=".doc,.docx,xls,.xlsx,.xlsm,.xltx,.xltm,.pdf,image/*">
                                                                                        </span>
                                                                                    <label style="color:red;" id="VALmassage_@i"></label>
                                                                                    <a target="_blank" href="~/ComplaintFiles/@Model.NoteList[i].FilePath">
                                                                                        <span id="fileid">@Model.NoteList[i].FilePath</span>
                                                                                    </a>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>*@
                                                            </div>
                                                        </div>
                                                    }
                                                    <div id="multiple_Notes"></div>
                                                }
                                                else
                                                {
                                                    <div id="multiple_Notes">
                                                        <div class="row notediv" id="FileNote_@index">
                                                            @Html.Hidden("Index", index)
                                                            <div class="col-md-6">
                                                                <div class="form-group">
                                                                    @*<label>File note ID: 01 <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>File note date:  2019.09.16</label>*@
                                                                    <input type="hidden" name="NoteList[0].FileName" id="NoteList_0__FileName" value="" />
                                                                    <input type="hidden" class="CustomField" name="NoteList[0].Attachment" id="NoteList_0__Attachment" value="Term_@index" />
                                                                    <textarea class="form-control m-input abc" cols="20" id="NoteList0__NoteText" name="NoteList[0].NoteText" placeholder="Enter Description" rows="2"></textarea>
                                                                </div>
                                                                @*<label>Author: Web Submission</label>*@
                                                                @*<button type="button" style="padding: 3px;margin-left: 217px;" onclick="RemoveDiv('FileNote_@index');" class="btn default" data-dismiss="modal">Remove</button>*@
                                                                <button type="button" onclick="Addnewnote();" class="btn default" style="padding: 3px;color: black;background-color: #acb7ca;margin-left: 443px;">Add note</button>
                                                            </div>
                                                            <div class="col-md-6">
                                                                <div class="col-lg-4">
                                                                    <div class="form-group">
                                                                        <label style="margin-top: 20px;">Upload Attachment</label>
                                                                        <div class="fileinput margin-0 fileinput-new" data-provides="fileinput">
                                                                            <input type="file" onchange="Upload(this)" rpid="@index" isnew="isnew" name="Term_@index" id="Term_@index" accept=".doc,.docx,.pdf,image/*">
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }

                                                @*<div class="row">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                <label>Note</label>
                                                                @if (Model != null && Model.complaint != null && Model.complaint.Notes != null && (Model.complaint.IsResolved.ToUpper() == "NEW" || Model.complaint.IsComplaint.ToUpper() == "NO"))
                                                                {
                                                                    @Html.TextAreaFor(m => m.complaint.Notes, new { @class = "form-control m-input", @placeholder = "Enter Description", @rows = "4", @disabled = "disabled" })
                                                                }
                                                                else
                                                                {
                                                                    @Html.TextAreaFor(m => m.complaint.Notes, new { @class = "form-control m-input", @placeholder = "Enter Description", @rows = "4" })
                                                                }

                                                            </div>
                                                        </div>
                                                    </div>*@
                                                @*@if (Model != null && Model.complaint != null && (Model.complaint.IsResolved.ToUpper() == "NEW" || Model.complaint.IsComplaint.ToUpper() == "NO"))*@
                                                @if (Model != null && Model.complaint != null && Model.complaint.ComplaintType.ToUpper() == "WEB SUBMISSION")
                                                {
                                                    <div class="row hide" id="DivProduct">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.productcategory != null && Model.Labelconfig.productcategory != "")
                                                                {
                                                                    <label>@Model.Labelconfig.productcategory<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                else
                                                                {
                                                                    <label>Product Category<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                @Html.DropDownListFor(m => m.complaint.ComplaintProductTypeId, new SelectList(Model.ProductCategorylist, "Value", "Text", 0), "--Select Product Category--", new { @data_live_search = "true", @class = "form-control bs-select", @onchange = "GetProductType(this);" })
                                                                @Html.ValidationMessageFor(m => m.complaint.ComplaintProductTypeId)
                                                            </div>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.Producttype != null && Model.Labelconfig.Producttype != "")
                                                                {
                                                                    <label>@Model.Labelconfig.Producttype<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                else
                                                                {
                                                                    <label>Product Type<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                @Html.DropDownListFor(m => m.complaint.ComplaintProductId, new SelectList(Model.ProductCategorylist, "Value", "Text", 0), "--Select Product--", new { @data_live_search = "true", @class = "form-control bs-select" })
                                                                @Html.ValidationMessageFor(m => m.complaint.ComplaintProductId)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row hide" id="DivCategory">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.Compcategory != null && Model.Labelconfig.Compcategory != "")
                                                                {
                                                                    <label>@Model.Labelconfig.Compcategory<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                else
                                                                {
                                                                    <label>Complaint category<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                @Html.DropDownListFor(m => m.complaint.ComplaintCategoryId, new SelectList(Model.ComplaintCategoryList, "Value", "Text", 0), "--Select Complaint Category--", new { @data_live_search = "true", @class = "form-control bs-select", @onchange = "GetNatureOfComplaint(this);" })
                                                                @Html.ValidationMessageFor(m => m.complaint.ComplaintCategoryId)
                                                            </div>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.Nature != null && Model.Labelconfig.Nature != "")
                                                                {
                                                                    <label>@Model.Labelconfig.Nature<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                else
                                                                {
                                                                    <label>Nature of complaint<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                @Html.DropDownListFor(m => m.complaint.ComplaintNatureOfId, new SelectList(Model.ComplaintNatureList, "Value", "Text", 0), "--Select Complaint Nature--", new { @data_live_search = "true", @class = "form-control bs-select", @onchange = "GetTCFOutcome(this);" })
                                                                @Html.ValidationMessageFor(m => m.complaint.ComplaintNatureOfId)
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="row" id="DivProduct">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.productcategory != null && Model.Labelconfig.productcategory != "")
                                                                {
                                                                    <label>@Model.Labelconfig.productcategory<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                else
                                                                {
                                                                    <label>Product Category<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                @Html.DropDownListFor(m => m.complaint.ComplaintProductTypeId, new SelectList(Model.ProductTypeList, "Value", "Text", 0), "--Select Product Category--", new { @data_live_search = "true", @class = "form-control bs-select", @onchange = "GetProductType(this);" })
                                                                @Html.ValidationMessageFor(m => m.complaint.ComplaintProductTypeId)
                                                            </div>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.Producttype != null && Model.Labelconfig.Producttype != "")
                                                                {
                                                                    <label>@Model.Labelconfig.Producttype<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                else
                                                                {
                                                                    <label>Product Type<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                @Html.DropDownListFor(m => m.complaint.ComplaintProductId, new SelectList(Model.ProductCategorylist, "Value", "Text", 0), "--Select Product--", new { @data_live_search = "true", @class = "form-control bs-select" })
                                                                @Html.ValidationMessageFor(m => m.complaint.ComplaintProductId)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row" id="DivCategory">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.Compcategory != null && Model.Labelconfig.Compcategory != "")
                                                                {
                                                                    <label>@Model.Labelconfig.Compcategory<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                else
                                                                {
                                                                    <label>Complaint category<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                @Html.DropDownListFor(m => m.complaint.ComplaintCategoryId, new SelectList(Model.ComplaintCategoryList, "Value", "Text", 0), "--Select Complaint Category--", new { @data_live_search = "true", @class = "form-control bs-select", @onchange = "GetNatureOfComplaint(this);" })
                                                                @Html.ValidationMessageFor(m => m.complaint.ComplaintCategoryId)
                                                            </div>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.Nature != null && Model.Labelconfig.Nature != "")
                                                                {
                                                                    <label>@Model.Labelconfig.Nature<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                else
                                                                {
                                                                    <label>Nature of complaint<span style="font-weight: bold;color: red;">*</span></label>
                                                                }
                                                                @Html.DropDownListFor(m => m.complaint.ComplaintNatureOfId, new SelectList(Model.ComplaintNatureList, "Value", "Text", 0), "--Select Complaint Nature--", new { @data_live_search = "true", @class = "form-control bs-select", @onchange = "GetTCFOutcome(this);" })
                                                                @Html.ValidationMessageFor(m => m.complaint.ComplaintNatureOfId)
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                                @*@if (Model != null && Model.complaint != null && (Model.complaint.IsResolved.ToUpper() == "NEW" || Model.complaint.IsComplaint.ToUpper() == "NO"))*@
                                                @if (Model != null && Model.complaint != null && Model.complaint.ComplaintType.ToUpper() == "WEB SUBMISSION")
                                                {
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                <label>Complaint received date</label>
                                                                <div class="input-group">
                                                                    <span class="input-group-addon">
                                                                        <i class="fa fa-calendar font-green"></i>
                                                                    </span>
                                                                    @Html.TextBoxFor(m => m.complaint.DateReceived, Constants.DateFormatString, new { @class = "form-control form-control-inline  date-picker", @placeholder = "Select recieved date", @disabled = "disabled" })
                                                                    @Html.ValidationMessageFor(m => m.complaint.DateReceived)

                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                <label>Complaint incident date&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<label style="font:5px;"><span class="text-right">(date when dissatisfactory experience occcured)</span></label></label>
                                                                <div class="input-group">
                                                                    <span class="input-group-addon">
                                                                        <i class="fa fa-calendar font-green"></i>
                                                                    </span>
                                                                    @Html.TextBoxFor(m => m.complaint.DateIncident, Constants.DateFormatString, new { @class = "form-control form-control-inline  date-picker", @placeholder = "Select incident date", @disabled = "disabled" })
                                                                    @Html.ValidationMessageFor(m => m.complaint.DateIncident)

                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                <label>Complaint received date</label>
                                                                <div class="input-group">
                                                                    <span class="input-group-addon">
                                                                        <i class="fa fa-calendar font-green"></i>
                                                                    </span>
                                                                    @Html.TextBoxFor(m => m.complaint.DateReceived, Constants.DateFormatString, new { @class = "form-control form-control-inline  date-picker", @placeholder = "Select recieved date" })
                                                                </div>
                                                                @Html.ValidationMessageFor(m => m.complaint.DateReceived)
                                                            </div>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.incidentdate != null && Model.Labelconfig.incidentdate != "")
                                                                {
                                                                    <label>@Model.Labelconfig.incidentdate&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<label style="font:5px;"><span class="text-right">(date when dissatisfactory experience occcured)</span></label></label>
                                                                }
                                                                else
                                                                {
                                                                    <label>Complaint incident date&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<label style="font:5px;"><span class="text-right">(date when dissatisfactory experience occcured)</span></label></label>
                                                                }
                                                                <div class="input-group">
                                                                    <span class="input-group-addon">
                                                                        <i class="fa fa-calendar font-green"></i>
                                                                    </span>
                                                                    @Html.TextBoxFor(m => m.complaint.DateIncident, Constants.DateFormatString, new { @class = "form-control form-control-inline  date-picker", @placeholder = "Select incident date" })
                                                                </div>
                                                                @Html.ValidationMessageFor(m => m.complaint.DateIncident)

                                                            </div>
                                                        </div>
                                                    </div>
                                                }

                                                <div class="row">
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            @if (Model != null && Model.complaint != null && Model.complaint.TCFOutcome != null && Model.complaint.TCFOutcome != "")
                                                            {
                                                                if (Model != null && Model.Labelconfig != null && Model.Labelconfig.TCF != null && Model.Labelconfig.TCF != "")
                                                                {
                                                                    <label>@Model.Labelconfig.TCF : <b style="color:lightgray"><span id="tcf_outcome">@Model.complaint.TCFOutcome</span></b></label>
                                                                }
                                                                else
                                                                {
                                                                    <label>TCF Outcome : <b style="color:lightgray"><span id="tcf_outcome">Outcome</span></b></label>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                if (Model != null && Model.Labelconfig != null && Model.Labelconfig.TCF != null && Model.Labelconfig.TCF != "")
                                                                {
                                                                    <label>@Model.Labelconfig.TCF : <b style="color:lightgray"><span id="tcf_outcome"></span></b></label>
                                                                }
                                                                else
                                                                {
                                                                    <label>TCF Outcome : <b style="color:lightgray"><span id="tcf_outcome">Outcome</span></b></label>
                                                                }
                                                            }
                                                            @Html.HiddenFor(m => m.complaint.TCFOutcome)
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            @*@if (Model != null && Model.complaint != null && (Model.complaint.IsResolved.ToUpper() == "NEW" || Model.complaint.IsComplaint.ToUpper() == "NO"))*@
                                            @if (Model != null && Model.complaint != null && Model.complaint.ComplaintType.ToUpper() == "WEB SUBMISSION")
                                            {
                                                <div class="form-actions" id="WebsubmitDiv">
                                                    <div class="col-lg-6">
                                                        <button type="button" class="btn btn-primary btnPrevious hide">Previous</button>
                                                    </div>
                                                    <div class="text-right">
                                                        <button type="button" class="btn btn-primary btnNext hide">Next</button>
                                                        <button type="button" class="btn btn-primary newSubmit" onclick="ComplaintFormSubmit();">Save</button>
                                                        <button type="button" onclick="location.href = '/CRT/CRTList'" class="btn default" data-dismiss="modal">Cancel</button>
                                                    </div>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="form-actions" id="CRTsubmitDiv">
                                                    <div class="col-lg-6">
                                                        <button type="button" class="btn btn-primary btnPrevious">Previous</button>
                                                    </div>
                                                    <div class="col-lg-6 text-right">
                                                        <button type="button" class="btn btn-primary btnNext">Next</button>
                                                        <button type="button" class="btn btn-primary btnSubmit">Save</button>
                                                        <button type="button" onclick="location.href = '/CRT/CRTList'" class="btn default" data-dismiss="modal">Cancel</button>
                                                    </div>
                                                </div>
                                            }

                                        </div>
                                        <div class="tab-pane" id="tab2" role="tabpanel">
                                            @*<div class="form-body"></div>*@
                                            <div class="row margin-top10">
                                                <div class="col-lg-12">
                                                    <div class="portlet-title">
                                                        <div class="caption caption-md">
                                                            <i class="icon-globe theme-font hide"></i>
                                                            <span class="caption-subject font-blue-madison bold uppercase">Complaint status</span>
                                                        </div>
                                                    </div>
                                                    <div class="portlet-body">
                                                        <div class="row">
                                                            <div class="col-md-6">
                                                                <div class="row">
                                                                    <div class="col-md-4">
                                                                        <label>Complaint resolved?</label>
                                                                        <div class="mt-radio-inline">
                                                                            <label class="mt-radio mt-radio-outline margin-bottom0" style="font-size:13px;">
                                                                                @Html.RadioButtonFor(m => m.complaint.IsResolved, "Yes", new { @onclick = "getresolutiondate();" })
                                                                                Yes
                                                                                <span></span>
                                                                            </label>
                                                                            <label class="mt-radio mt-radio-outline margin-bottom0" style="font-size:13px;">
                                                                                @Html.RadioButtonFor(m => m.complaint.IsResolved, "Not yet", new { @onclick = "getresolutiondate();", @checked = "checked" })
                                                                                Not yet
                                                                                <span></span>
                                                                            </label>
                                                                            @Html.ValidationMessageFor(m => m.complaint.IsResolved)

                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-8">
                                                                        <div class="form-group">
                                                                            <label>Complaint resolution date</label>
                                                                            <div class="input-group">
                                                                                <span class="input-group-addon">
                                                                                    <i class="fa fa-calendar font-green"></i>
                                                                                </span>
                                                                                @Html.TextBoxFor(m => m.complaint.DateResolved, Constants.DateFormatString, new { @class = "form-control form-control-inline  date-picker", @placeholder = "Select resolution date", @disabled = "disabled" })
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6">
                                                                <div class="form-group">
                                                                    <label></label>
                                                                    <div class="input-group">
                                                                        <label>Complaint number : <span style="color:rgba(40, 116, 143, 1);font-weight:bold">BR 00112233</span></label>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="col-md-6">
                                                                <div class="form-group">
                                                                    @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.Rootcause != null && Model.Labelconfig.Rootcause != "")
                                                                    {
                                                                        <label>@Model.Labelconfig.Rootcause<span style="font-weight: bold;color: red;">*</span></label>
                                                                    }
                                                                    else
                                                                    {
                                                                        <label>Root cause</label>
                                                                    }
                                                                    @Html.DropDownListFor(m => m.complaint.ComplaintRootCauseId, new SelectList(Model.RootcauseList, "Value", "Text", 0), "--Select Policy Status--", new { @data_live_search = "true", @class = "form-control bs-select" })
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6">
                                                                <div class="form-group">
                                                                    @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.howcomreceived != null && Model.Labelconfig.howcomreceived != "")
                                                                    {
                                                                        <label>@Model.Labelconfig.howcomreceived</label>
                                                                    }
                                                                    else
                                                                    {
                                                                        <label>How complaint received?</label>
                                                                    }
                                                                    @Html.DropDownListFor(m => m.complaint.ComplaintReceivedId, new SelectList(Model.ComplaintreceivedList, "Value", "Text", 0), "--Select received method--", new { @data_live_search = "true", @class = "form-control bs-select" })

                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            @if (Model != null && Model.client != null && Model.client.IsViewSatisfationLevel == true)
                                                            {
                                                                <div class="col-md-6" id="SatisfactionLevel">
                                                                    <div class="form-group">
                                                                        @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.SatisfactionResolution != null && Model.Labelconfig.SatisfactionResolution != "")
                                                                        {
                                                                            <label>@Model.Labelconfig.SatisfactionResolution</label>
                                                                        }
                                                                        else
                                                                        {
                                                                            <label>Level of satisfaction after resolution communicated</label>
                                                                        }
                                                                        @Html.DropDownListFor(m => m.complaint.Satisfactionlevel_resolution, new SelectList(Model.SatisfactionLevelResolutionList, "Value", "Text", 0), "--Select Satisfaction Level --", new { @data_live_search = "true", @class = "form-control bs-select" })
                                                                        @Html.ValidationMessageFor(m => m.complaint.Satisfactionlevel_resolution)
                                                                    </div>
                                                                </div>
                                                            }
                                                            <div class="col-md-6">
                                                                <div class="form-group">
                                                                    @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.policystatus != null && Model.Labelconfig.policystatus != "")
                                                                    {
                                                                        <label>@Model.Labelconfig.policystatus</label>
                                                                    }
                                                                    else
                                                                    {
                                                                        <label>Policy status</label>
                                                                    }
                                                                    @Html.DropDownListFor(m => m.complaint.ComplaintPolicyStatusId, new SelectList(Model.PolicyList, "Value", "Text", 0), "--Select Policy Status--", new { @data_live_search = "true", @class = "form-control bs-select" })
                                                                    @Html.ValidationMessageFor(m => m.complaint.ComplaintPolicyStatusId)
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="col-md-6">
                                                                <div class="form-group">
                                                                    @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.Compregulatory != null && Model.Labelconfig.Compregulatory != "")
                                                                    {
                                                                        <label>@Model.Labelconfig.Compregulatory</label>
                                                                    }
                                                                    else
                                                                    {
                                                                        <label>Complaint from regulatory body?</label>
                                                                    }
                                                                    @Html.DropDownListFor(m => m.complaint.ComplaintReceivedRegulatoryId, new SelectList(Model.ComplaintReceivedRegulatoryList, "Value", "Text", 0), "Choose..", new { @data_live_search = "true", @class = "form-control bs-select", @onchange = "chkdropdown(this);" })
                                                                    @Html.ValidationMessageFor(m => m.complaint.ComplaintReceivedRegulatoryId)
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6">
                                                                <div class="form-group">
                                                                    @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.feedbackregulatory != null && Model.Labelconfig.feedbackregulatory != "")
                                                                    {
                                                                        <label>@Model.Labelconfig.feedbackregulatory</label>
                                                                    }
                                                                    else
                                                                    {
                                                                        <label>Feedback from regulatory body</label>
                                                                    }
                                                                    @Html.DropDownListFor(m => m.complaint.ComplaintReceivedRegulatoryFeedbackId, new SelectList(Model.ComplaintReceivedRegulatoryFeedbackList, "Value", "Text", 0), "Choose..", new { @data_live_search = "true", @class = "form-control bs-select" })
                                                                    @Html.ValidationMessageFor(m => m.complaint.ComplaintReceivedRegulatoryFeedbackId)
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row margin-top10">
                                                <div class="col-lg-12">
                                                    <div class="portlet-title">
                                                        <div class="caption caption-md">
                                                            <i class="icon-globe theme-font hide"></i>
                                                            <span class="caption-subject font-blue-madison bold uppercase">Overall outcome</span>
                                                        </div>
                                                    </div>
                                                    <div class="portlet-body">
                                                        <div class="row">
                                                            <div class="col-md-6">
                                                                <div class="form-group">
                                                                    @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.Overalloutcome != null && Model.Labelconfig.Overalloutcome != "")
                                                                    {
                                                                        <label>@Model.Labelconfig.Overalloutcome</label>
                                                                    }
                                                                    else
                                                                    {
                                                                        <label>Overall outcome</label>
                                                                    }
                                                                    @Html.DropDownListFor(m => m.complaint.ComplaintOverallOutcomeId, new SelectList(Model.ComplaintOverallOutcomeList, "Value", "Text", 0), "--Select Overall Outcome--", new { @data_live_search = "true", @class = "form-control bs-select" })

                                                                </div>
                                                            </div>
                                                            <div class="col-md-6">
                                                                <div class="form-group">
                                                                    @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.Compensation != null && Model.Labelconfig.Compensation != "")
                                                                    {
                                                                        <label>@Model.Labelconfig.Compensation</label>
                                                                    }
                                                                    else
                                                                    {
                                                                        <label>Compensation / Payment</label>
                                                                    }
                                                                    @Html.DropDownListFor(m => m.complaint.ComplaintCompensationId, new SelectList(Model.ComplaintCompensationList, "Value", "Text", 0), "--Select Compensation--", new { @data_live_search = "true", @class = "form-control bs-select" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="col-md-6">
                                                                <div class="form-group">
                                                                    @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.Regulatedcost != null && Model.Labelconfig.Regulatedcost != "")
                                                                    {
                                                                        <label>@Model.Labelconfig.Regulatedcost</label>
                                                                    }
                                                                    else
                                                                    {
                                                                        <label>Regulated costs</label>
                                                                    }
                                                                    @Html.DropDownListFor(m => m.complaint.ComplaintRegulatedCostId, new SelectList(Model.ComplaintCompensationList, "Value", "Text", 0), "--Select costs--", new { @data_live_search = "true", @class = "form-control bs-select" })
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6">
                                                                <div class="form-group">
                                                                    @if (Model != null && Model.Labelconfig != null && Model.Labelconfig.Value != null && Model.Labelconfig.Value != "")
                                                                    {
                                                                        <label>@Model.Labelconfig.Value</label>
                                                                    }
                                                                    else
                                                                    {
                                                                        <label>Value</label>
                                                                    }
                                                                    @Html.TextBoxFor(m => m.complaint.CompensationValue, new { @class = "form-control m-input", @placeholder = "Enter value" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-actions">
                                                <div class="col-lg-6">
                                                    <button type="button" class="btn btn-primary btnPrevious">Previous</button>
                                                </div>
                                                <div class="col-lg-6 text-right">
                                                    <button type="button" class="btn btn-primary btnNext">Next</button>
                                                    <button type="button" onclick="ComplaintFormSubmit();" class="btn btn-primary btnSubmit">Save</button>
                                                    <button type="button" onclick="location.href = '/CRT/CRTList'" class="btn default" data-dismiss="modal">Cancel</button>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    @*<script src="~/assets/global/plugins/bootstrap-summernote/summernote.min.js" type="text/javascript"></script>
        <script src="~/assets/pages/scripts/components-editors.min.js" type="text/javascript"></script>
        <script src="~/assets/global/plugins/select2/js/select2.full.min.js" type="text/javascript"></script>
        <script src="~/assets/pages/scripts/components-select2.min.js" type="text/javascript"></script>*@
    <script>
        function SaveComplaintResponse(response) {
            if (response == "_Logon_") {
                window.location.href = "/Login/Login";
            }
            else {
                if (response.IsSuccess) {
                    SetMessageForPageLoad(response.Message, "complaintsaved");
                    window.location.href = "/CRT/CRTList";
                } else {
                    ShowMessage(response.Message, "error");
                }
            }
        }

        $(document).ready(function () {
            if (status != null && status == "WEB SUBMISSION") {
                $("#DivProduct, #DivCategory").hide();
                //$("#m_tabs_5_2").hide();
                //$("#m_tabs_5_3").hide();
            }
            //Chkclient();
            Chkclientforwebsubmission();
            chkdropdown();

            if ($("input[type='radio'][class=class1]").is(':checked') == true) {
                $("#m_tabs_5_2").removeClass('hide');
                $("#m_tabs_5_3").removeClass('hide');
                $("#DivProduct,#DivCategory").removeClass('hide');
                //$("#WebsubmitDiv").addClass('hide');
                $(".btnPrevious").removeClass('hide');
                $(".btnNext").removeClass('hide');
                $(".newSubmit").addClass('hide');
            }
            if ($("input[type='radio'][class=class2]").is(':checked') == true) {
                $("#m_tabs_5_2").addClass('hide');
                $("#m_tabs_5_3").addClass('hide');
                $("#DivProduct,#DivCategory").addClass('hide');
                //$("#WebsubmitDiv").removeClass('hide');
                $(".btnPrevious").addClass('hide');
                $(".btnNext").addClass('hide');
                $(".newSubmit").removeClass('hide');
            }


            $(".btnPrevious, .btnSubmit").hide();

            $("#m_tabs_5_1").click(function () {
                $("#frmComplaint").valid();
                if ($("#frmComplaint .tab-content .active .field-validation-error").length > 0 || $("#frmComplaint .tab-content .active .field-validation-error").length > 0) { }
                else {
                    $("#tab1").fadeIn();
                    $("#tab1").addClass("active");
                    $("#tab2,#tab3").removeClass("active");
                    $(this).closest("ul").children("li").removeClass("active");
                    $(this).closest("li").addClass("active");
                    $("#tab2,#tab3").hide();
                    $(".btnPrevious").hide();
                    $(".btnSubmit").hide();
                    $(".btnNext").show();
                    $(".bs-select").selectpicker('refresh');
                }

            });

            $("#m_tabs_5_2").click(function () {
                $("#frmComplaint").valid();
                if ($("#frmComplaint .tab-content .active .field-validation-error").length > 0 || $("#frmComplaint .tab-content .active .field-validation-error").length > 0) { }
                else {
                    $("#tab2").fadeIn();
                    $("#tab2").addClass("active");
                    $("#tab1,#tab3").removeClass("active");
                    $(this).closest("ul").children("li").removeClass("active");
                    $(this).closest("li").addClass("active");
                    $("#tab1,#tab3").hide();
                    $(".btnPrevious").show();
                    $(".btnSubmit").show();
                    $(".btnNext").hide();
                    $(".bs-select").selectpicker('refresh');
                }
            });

            //$("#m_tabs_5_3").click(function () {
            //    $("#frmComplaint").valid();
            //    if ($("#frmComplaint .tab-content .active .field-validation-error").length > 0 || $("#frmComplaint .tab-content .active .field-validation-error").length > 0) { }
            //    else {
            //        $("#tab3").fadeIn();
            //        $("#tab3").addClass("active");
            //        $("#tab1,#tab2").removeClass("active");
            //        $(this).closest("ul").children("li").removeClass("active");
            //        $(this).closest("li").addClass("active");
            //        $("#tab1,#tab2").hide();
            //        $(".btnPrevious").show();
            //        $(".btnSubmit").show();
            //        $(".btnNext").hide();
            //        $(".bs-select").selectpicker('refresh');
            //    }
            //});

            if ($("#complaint_regulatory").val() == "No") {
                $('#complaint_feedback').val("Not Applicable");
                $("#complaint_feedback").attr('disabled', 'disabled');
            }
            else {
                $("#complaint_feedback").removeAttr('disabled');
                $('#complaint_feedback').val("Pending");
            }
            $(".bs-select").selectpicker('refresh');
        });

        $(".btnNext").click(function () {
            $("#frmComplaint").valid();
            if ($("#frmComplaint .tab-content .active .field-validation-error").length > 0) { }
            else {
                var selA = $(".employee").find("li.active").children("a").attr("id");
                if (selA == "m_tabs_5_1") {
                    $("#m_tabs_5_2").trigger("click");
                }

            }
        });

        $(".btnPrevious").click(function () {
            var selA = $(".employee").find("li.active").children("a").attr("id");
            if (selA == "m_tabs_5_2") {
                $("#m_tabs_5_1").trigger("click");
            }
        });

        //function Chkclient(obj) {
        //    if ($("#complaint_IsClient").prop('checked') == true) {
        //        $("#complaint_PolicyNumber").attr('disabled', 'disabled');
        //        $("#complaint_PolicyNumber").val('');
        //        var x = document.getElementById("complaint_ComplaintPolicyStatusId");
        //        for (i = 0; i < x.options.length; i++) {
        //            if (document.getElementById("complaint_ComplaintPolicyStatusId").getElementsByTagName("option")[i].text.toString().toUpperCase() == "“NOT A CLIENT") {
        //                document.getElementById("complaint_ComplaintPolicyStatusId").getElementsByTagName("option")[i].selected = true;
        //            }
        //            $('#complaint_ComplaintPolicyStatusId').selectpicker('render');
        //            $("#complaint_ComplaintPolicyStatusId").attr('disabled', 'disabled');
        //        }
        //    } else {
        //        $("#complaint_PolicyNumber").removeAttr('disabled');
        //        $("#complaint_PolicyNumber").val('');
        //        var x = document.getElementById("complaint_ComplaintPolicyStatusId");
        //        for (i = 0; i < x.options.length; i++) {
        //            if (document.getElementById("complaint_ComplaintPolicyStatusId").getElementsByTagName("option")[i].text.toString().toUpperCase() == "“ACTIVE") {
        //                document.getElementById("complaint_ComplaintPolicyStatusId").getElementsByTagName("option")[i].selected = true;
        //            }
        //            $('#complaint_ComplaintPolicyStatusId').selectpicker('render');
        //            //$("#complaint_ComplaintPolicyStatusId").attr('disabled', 'disabled');
        //        }
        //    }
        //}

        function Chkclient(obj) {
            if ($("#complaint_IsClient").prop('checked') == true) {
                $("#complaint_PolicyNumber").attr('disabled', 'disabled');
                $("#complaint_PolicyNumber").val('');
            } else {
                $("#complaint_PolicyNumber").removeAttr('disabled');
                $("#complaint_PolicyNumber").val('');
            }
        }
        function Chkclientforwebsubmission() {
            if ($("#complaint_IsClient").prop('checked') == true) {
                $("#complaint_PolicyNumber").attr('disabled', 'disabled');
                $("#complaint_PolicyNumber").val('');
            }
            //else {
            //    $("#complaint_PolicyNumber").removeAttr('disabled');
            //    $("#complaint_PolicyNumber").val('');
            //}
        }
        function chkdropdown() {
            debugger;
            if ($("#complaint_ComplaintReceivedRegulatoryId :selected").text() == "NO") {
                var x = document.getElementById("complaint_ComplaintReceivedRegulatoryFeedbackId");
                for (i = 0; i < x.options.length; i++) {
                    if (document.getElementById("complaint_ComplaintReceivedRegulatoryFeedbackId").getElementsByTagName("option")[i].text.toString().toUpperCase() == "NOT APPLICABLE") {
                        document.getElementById("complaint_ComplaintReceivedRegulatoryFeedbackId").getElementsByTagName("option")[i].selected = true;
                    }
                    $('#complaint_ComplaintReceivedRegulatoryFeedbackId').selectpicker('render');
                    $("#complaint_ComplaintReceivedRegulatoryFeedbackId").attr('disabled', 'disabled');
                    $("span[data-valmsg-for='complaint.ComplaintReceivedRegulatoryFeedbackId']").html('');
                    $("span[data-valmsg-for='complaint.ComplaintReceivedRegulatoryFeedbackId']").removeClass('field-validation-error');
                    $("span[data-valmsg-for='complaint.ComplaintReceivedRegulatoryFeedbackId']").addClass('field-validation-valid');
                    $("#complaint_ComplaintReceivedRegulatoryFeedbackId").removeClass('input-validation-error');
                    $("#complaint_ComplaintReceivedRegulatoryFeedbackId").addClass('valid');
                    //$('#complaint_ComplaintRegulatedCostId').val("");
                    //$("#complaint_ComplaintRegulatedCostId").attr('disabled', 'disabled');
                }
            }
            else {
                $("#complaint_ComplaintReceivedRegulatoryFeedbackId").removeAttr('disabled');
                $("#complaint_ComplaintRegulatedCostId").removeAttr('disabled');
                $('#complaint_ComplaintReceivedRegulatoryFeedbackId').val("");
                //$('#complaint_ComplaintRegulatedCostId').val("");
                //$("span[data-valmsg-for='complaint.ComplaintReceivedRegulatoryFeedbackId']").html('This field is required.');
                //$("span[data-valmsg-for='complaint.ComplaintReceivedRegulatoryFeedbackId']").removeClass('field-validation-valid');
                //$("span[data-valmsg-for='complaint.ComplaintReceivedRegulatoryFeedbackId']").addClass('field-validation-error');
                //$("#complaint_ComplaintReceivedRegulatoryFeedbackId").removeClass('valid');
                //$("#complaint_ComplaintReceivedRegulatoryFeedbackId").addClass('input-validation-error');

            }
            $(".bs-select").selectpicker('refresh');
        }

        function chkLevelOfDissatisfaction(obj) {
            if ($("#complaint_SatisfactionLevel :selected").text().toUpperCase() == "NOT DISSATISFIED") {
                var x = document.getElementById("complaint_ComplaintReceivedRegulatoryId");
                for (i = 0; i < x.options.length; i++) {
                    if (document.getElementById("complaint_ComplaintReceivedRegulatoryId").getElementsByTagName("option")[i].text.toString().toUpperCase() == "NO") {
                        document.getElementById("complaint_ComplaintReceivedRegulatoryId").getElementsByTagName("option")[i].selected = true;
                    }
                    $('#complaint_ComplaintReceivedRegulatoryId').selectpicker('render');
                    $("#complaint_ComplaintReceivedRegulatoryId").attr('disabled', 'disabled');
                }
                var y = document.getElementById("complaint_ComplaintOverallOutcomeId");
                for (i = 0; i < x.options.length; i++) {
                    if (document.getElementById("complaint_ComplaintOverallOutcomeId").getElementsByTagName("option")[i].text.toString().toUpperCase() == "REJECTED: NOT A COMPLAINT") {
                        document.getElementById("complaint_ComplaintOverallOutcomeId").getElementsByTagName("option")[i].selected = true;
                    }
                    $('#complaint_ComplaintOverallOutcomeId').selectpicker('render');
                    $("#complaint_ComplaintOverallOutcomeId").attr('disabled', 'disabled');
                    $('#complaint_ComplaintRegulatedCostId').val("");
                    $('#complaint_ComplaintRegulatedCostId').selectpicker('render');
                    $("#complaint_ComplaintRegulatedCostId").attr('disabled', 'disabled');
                    $('#complaint_ComplaintCompensationId').val("");
                    $('#complaint_ComplaintCompensationId').selectpicker('render');
                    $("#complaint_ComplaintCompensationId").attr('disabled', 'disabled');
                    $('#complaint_CompensationValue').val("");
                    $("#complaint_CompensationValue").attr('disabled', 'disabled');
                    $("#complaint_ComplaintReceivedRegulatoryFeedbackId").val("");
                    $('#complaint_ComplaintReceivedRegulatoryFeedbackId').selectpicker('render');
                    $("#complaint_ComplaintReceivedRegulatoryFeedbackId").attr('disabled', 'disabled');
                }

            }
            else {
                $("#complaint_ComplaintReceivedRegulatoryId").removeAttr('disabled');
                $('#complaint_ComplaintReceivedRegulatoryId').val("");
                $("#complaint_ComplaintOverallOutcomeId").removeAttr('disabled');
                $('#complaint_ComplaintOverallOutcomeId').val("");
                $("#complaint_ComplaintRegulatedCostId").removeAttr('disabled');
                $('#complaint_ComplaintRegulatedCostId').val("");
                $("#complaint_ComplaintCompensationId").removeAttr('disabled');
                $('#complaint_ComplaintCompensationId').val("");
                $("#complaint_CompensationValue").removeAttr('disabled');
                $('#complaint_CompensationValue').val("");
                $("#complaint_ComplaintReceivedRegulatoryFeedbackId").removeAttr('disabled');
                $('#complaint_ComplaintReceivedRegulatoryFeedbackId').val("");
            }
            $(".bs-select").selectpicker('refresh');
        }

        function Getdata(Obj) {
            //GetCompanyCustomRules(Obj);
            GetDivision(Obj);
            //GetProduct(Obj);
        }

        function GetCompanyCustomRules(Obj) {
            //var index = $(Obj).attr('index');
            var companyVal = $('#' + Obj.id).val();
            var postData = { cid: companyVal };
            ShowLoader();
            AjaxCall("/CRT/GetCompanyCustomRules", JSON.stringify(postData), "post", "json", "application/json", false).done(function (data) {
                HideLoader();
                //if (data == "_Logon_") {
                //    window.location.href = "/Login/Login";
                //}
                if (data != null) {
                    if (!data.IsViewDissatisfationLevel)
                        $("#DisSatisfactionLevel").hide();
                    if (!data.IsViewSatisfationLevel)
                        $("#Satisfactionlevel").hide();
                }
                else {

                }
            });
        }

        function GetDivision(Obj) {
            //var index = $(Obj).attr('index');
            var companyVal = $('#' + Obj.id).val();
            var postData = { cid: companyVal };
            ShowLoader();
            AjaxCall("/CRT/GetDivisionByCompany", JSON.stringify(postData), "post", "json", "application/json", false).done(function (data) {
                HideLoader();
                //if (data == "_Logon_") {
                //    window.location.href = "/Login/Login";
                //}
                if (data != null && data.length > 0) {
                    $("#complaint_DivisionId").html('');
                    $("#complaint_DivisionId").append('<option value="">-- Select Division --</option>');
                    $("#complaint_DivisionId").selectpicker('refresh');
                    for (key in data) {
                        $("#complaint_DivisionId").append('<option value="' + data[key].Value + '">' + data[key].Text + '</option>');
                    }
                    $("#complaint_DivisionId").selectpicker('refresh');
                }
                else {
                    $("#complaint_DivisionId").html('');
                    $("#complaint_DivisionId").append('<option value="">-- Select Division --</option>');
                    $("#complaint_DivisionId").selectpicker('refresh');
                }
            });
        }
        function GetProduct(Obj) {
            //var index = $(Obj).attr('index');
            var companyVal = $('#' + Obj.id).val();
            var postData = { cid: companyVal };
            ShowLoader();
            AjaxCall("/CRT/GetProductByCompany", JSON.stringify(postData), "post", "json", "application/json", false).done(function (data) {
                HideLoader();
                //if (data == "_Logon_") {
                //    window.location.href = "/Login/Login";
                //}
                if (data != null && data.length > 0) {
                    $("#complaint_ComplaintProductId").html('');
                    $("#complaint_ComplaintProductId").append('<option value="">-- Select Product --</option>');
                    $("#complaint_ComplaintProductId").selectpicker('refresh');
                    for (key in data) {
                        $("#complaint_ComplaintProductId").append('<option value="' + data[key].Value + '">' + data[key].Text + '</option>');
                    }
                    $("#complaint_ComplaintProductId").selectpicker('refresh');
                }
                else {
                    $("#complaint_ComplaintProductId").html('');
                    $("#complaint_ComplaintProductId").append('<option value="">-- Select Product --</option>');
                    $("#complaint_ComplaintProductId").selectpicker('refresh');
                }
            });
        }

        function GetProductType(Obj) {
            var productCategoryVal = $('#' + Obj.id).val();
            var postData = {
                id: productCategoryVal,
                clientid: productCategoryVal
            };
            ShowLoader();
            AjaxCall("/CRT/GetProductByProductCategory", JSON.stringify(postData), "post", "json", "application/json", false).done(function (data) {
                HideLoader();
                //if (data == "_Logon_") {
                //    window.location.href = "/Login/Login";
                //}
                if (data != null && data.length > 0) {
                    $("#complaint_ComplaintProductId").html('');
                    $("#complaint_ComplaintProductId").append('<option value="">-- Select Product --</option>');
                    $("#complaint_ComplaintProductId").selectpicker('refresh');
                    for (key in data) {
                        $("#complaint_ComplaintProductId").append('<option value="' + data[key].Value + '">' + data[key].Text + '</option>');
                    }
                    $("#complaint_ComplaintProductId").selectpicker('refresh');
                }
                else {
                    $("#complaint_ComplaintProductId").html('');
                    $("#complaint_ComplaintProductId").append('<option value="">-- Select Product --</option>');
                    $("#complaint_ComplaintProductId").selectpicker('refresh');
                }
            });
        }

        function GetNatureOfComplaint(Obj) {
            var complaiutCategoryVal = $('#' + Obj.id).val();
            var postData = {
                id: complaiutCategoryVal,
                clientid: complaiutCategoryVal
            };
            ShowLoader();
            AjaxCall("/CRT/GetNatureOfComplaintList", JSON.stringify(postData), "post", "json", "application/json", false).done(function (data) {
                HideLoader();
                //if (data == "_Logon_") {
                //    window.location.href = "/Login/Login";
                //}
                if (data != null && data.length > 0) {
                    $("#complaint_ComplaintNatureOfId").html('');
                    $("#complaint_ComplaintNatureOfId").append('<option value="">-- Select Complaint Nature --</option>');
                    $("#complaint_ComplaintNatureOfId").selectpicker('refresh');
                    for (key in data) {
                        $("#complaint_ComplaintNatureOfId").append('<option value="' + data[key].Value + '">' + data[key].Text + '</option>');
                    }
                    $("#complaint_ComplaintNatureOfId").selectpicker('refresh');
                }
                else {
                    $("#complaint_ComplaintNatureOfId").html('');
                    $("#complaint_ComplaintNatureOfId").append('<option value="">-- Select Complaint Nature --</option>');
                    $("#complaint_ComplaintNatureOfId").selectpicker('refresh');
                }
            });
        }

        $('input[type=radio][class=class1]').change(function () {

            $("#m_tabs_5_2").removeClass('hide');
            $("#m_tabs_5_3").removeClass('hide');
            $("#DivProduct,#DivCategory").removeClass('hide');
            //$("#WebsubmitDiv").addClass('hide');
            $(".btnPrevious").removeClass('hide');
            $(".btnNext").removeClass('hide');
            $(".newSubmit").addClass('hide');
        });

        $('input[type=radio][class=class2]').change(function () {
            $("#m_tabs_5_2").addClass('hide');
            $("#m_tabs_5_3").addClass('hide');
            $("#DivProduct,#DivCategory").addClass('hide');
            //$("#WebsubmitDiv").removeClass('hide');
            $(".btnPrevious").addClass('hide');
            $(".btnNext").addClass('hide');
            $(".newSubmit").removeClass('hide');
            AddnewnoteforNocomplaint();
        });

        function AddnewnoteforNocomplaint() {
            debugger;
            var ExpIndex = $("#Index").val();
            var htlml1 = $("#FileNote_" + ExpIndex).html();
            ExpIndex = parseInt(ExpIndex);
            ExpIndex = ExpIndex + 1;
            $("#Index").val(ExpIndex);
            var value = pad2(ExpIndex + 1);

            var html = "<div class='row notediv'  id='FileNote_" + ExpIndex + "'><input type='hidden' value=" + ExpIndex + "/>"
            html += "<div class='col-md-6'><div class='form-group'>"
            //html += "<label>File note ID:" + value + "  <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>File note date:  </label>"
            html += "<label></label>"
            html += "<input type='hidden' name='NoteList[" + ExpIndex + "].FileName id='NoteList_" + ExpIndex + "__FileName' value='' />"
            html += "<input type='hidden' class='CustomField' name='NoteList[" + ExpIndex + "].Attachment' id='NoteList_" + ExpIndex + "__Attachment' value='' />"
            html += "<textarea class='form-control m-input abc' cols='20' id='NoteList_" + ExpIndex + "__NoteText' name='NoteList[" + ExpIndex + "].NoteText' placeholder='Enter Description' rows='2'></textarea></div>"
            //html += "<label>Author: Web Submission</label>"
            // html += "<button type='button' style='padding:3px;margin-left:380px;' onclick='RemoveDiv(" + ExpIndex + ");' class='btn default' data-dismiss='modal'>Remove</button>"
            html += "<button type='button' onclick='Addnewnote();' class='btn default' style='padding:3px;color:black;background-color:#acb7ca;margin-left: 443px;'>Add note</button>"
            html += "</div>"
            html += "<div class='col-md-6'><div class='col-md-4'><div class='form-group'>"
            html += "<label style='margin-top:20px;'>Upload Attachment</label>"
            html += "<div class='fileinput margin-0 fileinput-new' data-provides='fileinput'>"
            html += "<input type='file' onchange='Upload(this)' rpid=" + ExpIndex + " isnew='isnew' name='Term_" + ExpIndex + "' id='Term_" + ExpIndex + "' accept='.doc,.docx,.pdf,image/*'>"
            html += "</div></div></div></div>"
            html += "</div>";

            $("#multiple_Notes").append(html);
            $("#FileNote_" + ExpIndex + " .CustomField").val("Term_" + ExpIndex + "");

            //$("#" + ID + "").find('input[type="file"]').attr("id", "Term_" + ExpIndex + "");
            //$("#" + ID + "").find('input[type="file"]').attr("name", "Term_" + ExpIndex + "");

        }

        function ComplaintFormSubmit() {

            if ($("#frmComplaint").valid()) {
                $("#frmComplaint *").removeAttr("disabled");
                //Chkclient();
                Chkclientforwebsubmission();
                ShowLoader();
                NotesIndexOrdering();
                $("#frmComplaint").submit();
            }

        }

        function Addnewnote() {

            var ExpIndex = $("#Index").val();
            var htlml1 = $("#FileNote_" + ExpIndex).html();
            ExpIndex = parseInt(ExpIndex);
            ExpIndex = ExpIndex + 1;
            $("#Index").val(ExpIndex);
            var value = pad2(ExpIndex + 1);

            var html = "<div class='row notediv'  id='FileNote_" + ExpIndex + "'><input type='hidden' value=" + ExpIndex + "/>"
            html += "<div class='col-md-6'><div class='form-group'>"
            //html += "<label>File note ID:" + value + "  <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>File note date:  </label>"
            html += "<label></label>"
            html += "<input type='hidden' name='NoteList[" + ExpIndex + "].FileName id='NoteList_" + ExpIndex + "__FileName' value='' />"
            html += "<input type='hidden' class='CustomField' name='NoteList[" + ExpIndex + "].Attachment' id='NoteList_" + ExpIndex + "__Attachment' value='' />"
            html += "<textarea class='form-control m-input abc' cols='20' id='NoteList_" + ExpIndex + "__NoteText' name='NoteList[" + ExpIndex + "].NoteText' placeholder='Enter Description' rows='2'></textarea></div>"
            //html += "<label>Author: Web Submission</label>"
            html += "<button type='button' style='padding:3px;margin-left:380px;' onclick='RemoveDiv(" + ExpIndex + ");' class='btn default' data-dismiss='modal'>Remove</button>"
            html += "<button type='button' onclick='Addnewnote();' class='btn default' style='padding:3px;color:black;background-color:#acb7ca;'>Add note</button>"
            html += "</div>"
            html += "<div class='col-md-6'><div class='col-md-4'><div class='form-group'>"
            html += "<label style='margin-top:20px;'>Upload Attachment</label>"
            html += "<div class='fileinput margin-0 fileinput-new' data-provides='fileinput'>"
            html += "<input type='file' onchange='Upload(this)' rpid=" + ExpIndex + " isnew='isnew' name='Term_" + ExpIndex + "' id='Term_" + ExpIndex + "' accept='.doc,.docx,.pdf,image/*'>"
            html += "</div></div></div></div>"
            html += "</div>";

            $("#multiple_Notes").append(html);
            $("#FileNote_" + ExpIndex + " .CustomField").val("Term_" + ExpIndex + "");

            //$("#" + ID + "").find('input[type="file"]').attr("id", "Term_" + ExpIndex + "");
            //$("#" + ID + "").find('input[type="file"]').attr("name", "Term_" + ExpIndex + "");

        }
        function NotesIndexOrdering() {
            var note = $("#multiple_Notes");
            note.find('div.notediv').each(function (i) {

                $(this).find("input[type='hidden']:eq(0)").attr("id", "NoteList_" + i + "__FileName");
                $(this).find("input[type='hidden']:eq(0)").attr("name", "NoteList[" + i + "].FileName");

                $(this).find("input[type='hidden']:eq(1)").attr("id", "NoteList_" + i + "__Attachment");
                $(this).find("input[type='hidden']:eq(1)").attr("name", "NoteList[" + i + "].Attachment");

                $(this).find('textarea').attr("id", "NoteList_" + i + "__NoteText");
                $(this).find('textarea').attr("name", "NoteList[" + i + "].NoteText");

                $(this).find("input[type='file']").find('input').attr("id", "NoteList_" + i + "__FilePath");
                $(this).find("input[type='file']").find('input').attr("name", "NoteList[" + i + "].FilePath");

            });
        }

        function RemoveDiv(index) {
            $("#multiple_Notes").find($("#FileNote_" + index)).remove();
        }

        function GetTCFOutcome(Obj) {
            var complaintNatureVal = $('#' + Obj.id).val();
            var compcategoryid = $('#complaint_ComplaintCategoryId').val();
            var postData = {
                Categoryid: compcategoryid,
                Natureid: complaintNatureVal,
                clientid: complaintNatureVal
            };
            ShowLoader();
            AjaxCall("/CRT/GetTCFOutcome", JSON.stringify(postData), "post", "json", "application/json", false).done(function (data) {
                HideLoader();
                //if (data == "_Logon_") {
                //    window.location.href = "/Login/Login";
                //}
                //alert(data);
                //debugger;
                if (data != null) {
                    $("#tcf_outcome").html('');
                    $("#tcf_outcome").html(data.Term);
                    $("#complaint.TCFOutcome").val(data.Term);
                }
                else {
                    $("#tcf_outcome").html('');
                }
            });
        }

        function getresolutiondate() {
            if ($("#complaint_IsResolved:checked").val() == "Yes") {
                $("#complaint_DateResolved").removeAttr('disabled');
                var currentDate = new Date();
                $("#complaint_DateResolved").datepicker("setDate", currentDate);
                //$("#complaint_Satisfactionlevel_resolution").removeAttr('disabled');

            }
            else if ($("#complaint_IsResolved:checked").val() == "Not yet") {
                //var currentDate = new Date();
                $("#complaint_DateResolved").val('');
                //$("#complaint_Satisfactionlevel_resolution").attr('disabled', 'disabled');
                $("#complaint_DateResolved").attr('disabled', 'disabled');
            }
        }

        //function validation() {
        //    note.find('div.notediv').each(function (i) {
        //        if()
        //    });
        //}

        function pad2(number) {
            return (number < 10 ? '0' : '') + number
        }

                                                                    //function Upload(DocID) {
                                                                    //    var size = DocID.files[0].size;
                                                                    //    var fileExtension = DocID.value.substring(DocID.value.lastIndexOf(".") + 1);
                                                                    //    if (fileExtension == "doc" || fileExtension == "docx" || fileExtension == "pdf" || fileExtension == "jpg" || fileExtension == "jpeg" || fileExtension == "png") {
                                                                    //        if (size > 1048576) {
                                                                    //            toastr["error"]("File should not be more than 1 MB.", { "positionClass": "toast-top-right", "progressBar": true });
                                                                    //            DocID.value = "";
                                                                    //        };
                                                                    //        document.getElementById('VALmassage').innerHTML = '';
                                                                    //    }
                                                                    //    else {
                                                                    //        document.getElementById('VALmassage').innerHTML = 'File must be doc,docx or pdf!';
                                                                    //    }
                                                                    //}
    </script>
}








