@using Brilliance.Infrastructure.DataProvider;
@model Brilliance.Models.Entity.TCFQuestionGroup
@{
    ViewBag.Title = "OutComeMaster";
    Layout = "~/Views/Shared/_Layout_public.cshtml";
    ConductDataprovider _icisDataProvider = new ConductDataprovider();
}
<link href="~/Content/kendoStyles.css" rel="stylesheet" />
<link rel="stylesheet" href="https://app.brillianceib.com/bundles/knockout?v=mKy6cxTu1mioyNO6m4RTtIqEAZBgJ9YqLsg1ixYmtsM1" />
<link rel="stylesheet" href="https://app.brillianceib.com/bundles/bootstrap?v=B9gEIvl-BkYgXVSg8Ql9co87zoQ4x1JR0IJEM-Rbbx01" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<style>
    #grid {
        margin: 0;
        padding: 0;
        border-width: 0;
        height: 100%;
        /* DO NOT USE !important for setting the Grid height! */
    }
      .fieldlist {
            margin: 0 0 -1em;
            padding: 0;
            padding-left:3%;
        }

        .fieldlist li {
            list-style: none;
            padding-bottom: 1em;
        }
   .form-control-feedback glyphicon glyphicon-remove
   {
       display:none;
   }
   .has-feedback label~.form-control-feedback
   {
       display:none;
   }
</style>

<form id="frmoutcome"  method="post" data-ajax="true" data-ajax-method="Post" data-ajax-success="SaveResponse(data);">
    <div class="page-content page-content-dashbrd-backgrnd">
        <div class="page-bar margin-bottom-10">
            <div class="row">
                <div class="col-md-12 padding-out">
                    <div class="portlet light padding-header margin-0 custom-padding-bar">
                        <div class="portlet-title portlet-title-Project-custom">
                            <div class="caption font-dark">
                                <i class="icon-settings font-dark"></i>
                                <span class="caption-subject bold uppercase"> Outcome Master</span>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <button type="button" class="btn btn-brilliance btn-sm" data-toggle="modal" data-target="#exampleModalLong">
            Add New
        </button>

        <!-- Modal -->
        <div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLongTitle">Add Details...</h5>

                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="form-group">
                                <div class="col-md-12">
                                    <label>Select the Client</label>
                                    @Html.DropDownListFor(x => x.HoldingEntityId, _icisDataProvider.Bindclient(), null, new { @class = "form-control", @style = "width:47%;" })
                                    @Html.ValidationMessageFor(x => x.HoldingEntityId)
                                </div>

                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <label>Code</label>
                                    @Html.TextBoxFor(x => x.Code, new { @class = "form-control", @style = "width:47%;" })
                                    @Html.HiddenFor(x => x.GroupId)
                                    @Html.HiddenFor(x => x.IsEdit)
                                </div>

                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="form-group">
                                <ul class="fieldlist">
                                    <li>
                                        <input type="checkbox" id="IsVisible" class="k-checkbox" name="IsVisible">
                                        <label class="k-checkbox-label" for="IsVisible">Is Group</label>
                                    </li>
                                </ul>
                            </div>

                        </div>
                        <div class="row">
                            <div class="form-group titleqgroup">
                                <div class="col-md-12">
                                    <label>Title</label>
                                    @Html.TextBoxFor(x => x.Title, new { @class = "form-control", @style = "width:47%;" })
                                </div>

                            </div>
                            <div class="form-group drpmaster">
                                <div class="col-md-12">
                                    <label>Group Name</label>
                                    @Html.DropDownListFor(x => x.coderef, _icisDataProvider.GetGroupcode(), "...", new { @class = "form-control", @style = "width:47%;" })
                                </div>

                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <label>Description</label>
                                    @Html.TextAreaFor(x => x.Description, new { @class = "form-control", @style = "width:47%;"  })
                                    @Html.ValidationMessageFor(x => x.Description)
                                </div>

                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">

                        <button type="button" class="btn btn-brilliance btnsave">Save and Close</button>

                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                       
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div id="grid"></div>
        </div>

    </div>

</form>




@section scripts{
    <script src="https://kendo.cdn.telerik.com/2018.2.620/js/jszip.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2018.2.620/js/kendo.all.min.js"></script>
<script src="~/Scripts/bootstrapvalidator.min.js"></script>

    <script>

        function SaveResponse(response) {
            alert(response)
            if (response.IsSuccess) {
                SetMessageForPageLoad(response.Message, "OutcomeSaved");
                
            } else {
                ShowMessage(response.Message, "error");
            }
        }
    </script>
    <script>
        $(document).ready(function () {

            $(".drpmaster").hide();
            BindGrid();
        });
    </script>
    <script>
        $('input[type="checkbox"]').click(function () {
            if ($(this).prop("checked") == true) {

                var url = '@Url.Action("getgroupcount", "CIS")';
                $.ajax({
                    url: url,
                    method: 'post',
                    data: {},
                    success:function (data)
                    {
                        debugger;
                        if(data==0)
                        { 
                            var dialog = $('#dialog'),
                                  undo = $("#undo");

                            undo.click(function () {
                                dialog.data("kendoDialog").open();
                                undo.fadeOut();
                            });
                            function onClose() {
                                undo.fadeIn();
                            }
                            dialog.kendoDialog({
                                width: "450px",
                                title: "Group Availabity",
                                closable: false,
                                modal: false,
                                content: "<p><strong>No outcome availabe.</strong><p>",
                                actions: [
                                          { text: 'Close' }, ],
                                close: onClose

                            });
                            $('input[name=IsVisible]').attr('checked', false);
                            $('input[name=IsVisible]').attr('value', 0);
                            $(".drpmaster").hide();
                        }
                        else {
                            $(".titleqgroup").hide();
                           

                            $("#msgcs").hide();
                            $(".drpmaster").show();
                            $('input[name=IsVisible]').attr('checked', true);
                            $('input[name=IsVisible]').attr('value', 1);
                        }
                    }
                });
            }
            else if ($(this).prop("checked") == false) {
                $(".titleqgroup").show();
                $(".drpmaster").hide();
            }
        })
      
</script>

    

    <script>
        function BindGrid() {

            var url = '@Url.Action("TCFOutcomeList", "CIS")';

            var element = $("#grid").kendoGrid({
                dataSource: {

                    transport: {
                        read: {
                            url: url,
                            type: "get",
                            dataType: "json"
                        }
                    },
                    
                    groupable: false,
                    sortable: false,
                    pageSize: 10,
                    serverPaging: false,
                    serverSorting: false
                },

                sortable: false,
                pageable: true,
                scrollable: true,
                /// detailInit: detailInit,
                dataBound: function () {
                    var grid = this;
                    $(".k-grouping-row").each(function (e) {
                        grid.collapseGroup(this);
                    });
                    ////this.expandRow(this.tbody.find("tr.k-master-row").last());
                },


                columns: [
                    {
                        title: "Id",
                        field: "GroupId",
                        hidden:true,
                        width: "4%"
                    },
                    {
                        field: "Title",
                        title: "Title",
                        width: "10%"
                    },
                    {
                        title: "Description",
                        field: "Description",
                        width: "70%"
                    },
                    
                    
                    {


                        'title': 'Action',
                        template: "<a href='\\\#' class='name-link btn btn-default' value='#= GroupId #'>#= 'Edit' #</a>",

                    },
                     {


                        
                         template: "<a href='\\\#' class='Id-link btn btn-default' value='#= GroupId #'>#= 'Delete' #</a>",

                     },
                ]

            }).on("click", "a.name-link", function () {
                var tr = $(this).closest("tr");

                var dataItem = $("#grid").data("kendoGrid").dataItem(tr);
                var id = dataItem.GroupId;
                var url = '@Url.Action("GetoutcomeById", "CIS")';
                ShowLoader();
                $.ajax({
                    url: url,
                    method: 'post',
                    data: { Id: id },
                    success:function(data)
                    {
                        HideLoader();
                        $('#exampleModalLong').modal('show');
                        $("#Code").val(data.Code);
                        $("#IsEdit").val(true);
                        $("#GroupId").val(data.GroupId);
                        $("#HoldingEntityId").val(data.HoldingEntityId.toUpperCase());
                        $("#Title").val(data.Title)
                        $("#Description").val(data.Description)
                        if(data.IsVisible==false)
                        {
                            $('input[name=IsVisible]').attr('checked', true);
                            $(".titleqgroup").hide();
                           
                            $(".drpmaster").show();
                            $("#coderef").val(data.Code.toUpperCase());
                        }
                        else if(data.IsVisible==true)
                        {
                            $('input[name=IsVisible]').attr('checked', false);
                            $(".titleqgroup").show();

                            $(".drpmaster").hide();
                            
                        }
                    }
                });

            }).on("click", "a.Id-link", function () {
                var tr = $(this).closest("tr");
                var dataItem = $("#grid").data("kendoGrid").dataItem(tr);
                var id = dataItem.GroupId;
                var url = '@Url.Action("DeleteoutcomeMaster", "CIS")';
                ShowLoader();
                $.ajax({
                    url: url,
                    method: 'post',
                    data: { Id: id },
                    success: function (data) {
                        debugger;
                        HideLoader();
                        
                        if (data.IsSuccess == true)
                        {
                            BindGrid();
                            SetMessageForPageLoad(response.Message, "OutcomeSaved");
                        }
                        else if (data.IsSuccess == false)
                        {
                            BindGrid();
                            ShowMessage(data.Message, "error");

                        }
                        
                        
                      
                    }
                });
            });

        }

  </script> 

   
    <script>
        $(".btnsave").click(function () {
            debugger;
            Validate();
            var validator = $('#frmoutcome').data('bootstrapValidator');
            validator.validate();
            if (validator.isValid()) {
                var TCFQuestionGroup = {
                    GroupId: $("#GroupId").val(),
                    HoldingEntityId: $("#HoldingEntityId").val(),
                    Code: $("#Code").val(),
                    IsVisible: $("#IsVisible").prop('checked'),
                    Title: $("#Title").val(),
                    Description: $("#Description").val(),
                    coderef: $("#coderef").val(),
                    IsEdit: $("#IsEdit").val()
                }
                var url = '@Url.Action("SaveOutcome", "CIS")';
                ShowLoader();
                $.ajax({
                    url: url,
                    method: 'post',
                    data: JSON.stringify(TCFQuestionGroup),
                    dataType: 'json',
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        BindGrid();
                        HideLoader();
                        debugger;
                        $('#exampleModalLong').modal('hide');
                        SetMessageForPageLoad(data.IsSuccess, "OutcomeSaved");
                        window.location.reload()
                    },
                    failure: function (ex) {
                        BindGrid();
                        alert(data.Message)
                    }
                });
            }
            else
            {
                return false;
            }
        });

        function Validate()
        {
            var validator = $("#frmoutcome").bootstrapValidator({
                feedbackIcons: {
                    valid: "glyphicon glyphicon-ok",
                    validating: "glyphicon glyphicon-refresh"
                },
                fields: {
                    HoldingEntityId: {
                        message: "Please select Entity...",
                        validators: {
                            notEmpty: {
                                message: "Please select Entity..."
                            }
                        }
                    }
                },
                fields: {
                    Description: {
                        message: "Please provide outcome description..",
                        validators: {
                            notEmpty: {
                                message: "Please prvide outcome description.."
                            }
                        }
                    },
                }
            });
        }
    </script>

    }

