@using Brilliance.Infrastructure.DataProvider;
@model Brilliance.Models.Entity.TCFQuestionGroup
@{
    ViewBag.Title = "OutComeMaster";
    Layout = "~/Views/Shared/_Layout_public.cshtml";
    ConductDataprovider _icisDataProvider = new ConductDataprovider();
   
}
<link href="~/Content/kendoStyles.css" rel="stylesheet" />
@*<link rel="stylesheet" href="https://app.brillianceib.com/bundles/knockout?v=mKy6cxTu1mioyNO6m4RTtIqEAZBgJ9YqLsg1ixYmtsM1" />
<link rel="stylesheet" href="https://app.brillianceib.com/bundles/bootstrap?v=B9gEIvl-BkYgXVSg8Ql9co87zoQ4x1JR0IJEM-Rbbx01" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">*@
<style>
    #grid {
        margin: 0;
        padding: 0;
        border-width: 0;
        height: 100%;
        /* DO NOT USE !important for setting the Grid height! */
    }
      .fieldlist {
            margin: 0 0 -1em;
            padding: 0;
            padding-left:3%;
        }

        .fieldlist li {
            list-style: none;
            padding-bottom: 1em;
        }
   .form-control-feedback glyphicon glyphicon-remove
   {
       display:none;
   }
   .has-feedback label~.form-control-feedback
   {
       display:none;
   }
</style>

<form id="frmoutcome"  method="post" data-ajax="true" data-ajax-method="Post" data-ajax-success="SaveResponse(data);">
    <div class="page-content page-content-dashbrd-backgrnd">
        <div class="page-bar margin-bottom-10">
            <div class="row">
                <div class="col-md-12 padding-out">
                    <div class="portlet light padding-header margin-0 custom-padding-bar">
                        <div class="portlet-title portlet-title-Project-custom">
                            <div class="caption font-dark">
                                <i class="icon-settings font-dark"></i>
                                <span class="caption-subject bold uppercase"> Outcome Master</span>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <button type="button" class="btn btn-brilliance btn-sm" data-toggle="modal" data-target="#exampleModalLong">
            Add New
        </button>

        <!-- Modal -->
        <div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLongTitle">Add Details...</h5>

                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="form-group">
                                <div class="col-md-12">
                                    <label>Select the Company</label>


                                    @Html.DropDownListFor(x => x.HoldingEntityId, _icisDataProvider.Bindclient(), "Select Company", new { @class = "form-control", @style = "width:47%;" })
                                    @Html.ValidationMessageFor(x => x.HoldingEntityId)
                                </div>

                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <label>Select the Division</label>
                                    @Html.DropDownList("DivisionId", new List<SelectListItem>(){new SelectListItem(){ Text= "Select Division", Value = "null"}}, "",new { @class = "form-control", @style = "width:47%;" })
                                    @Html.ValidationMessageFor(x => x.DivisionId)
                                </div>

                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <label>Code</label>
                                    @Html.TextBoxFor(x => x.Code, new { @class = "form-control", @style = "width:47%;", @readonly = "readonly" })
                                    @Html.HiddenFor(x => x.GroupId)
                                    @Html.HiddenFor(x => x.IsEdit)
                                    @Html.HiddenFor(x=>x.Filename)
                                </div>

                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="form-group">
                                <ul class="fieldlist">
                                    <li>
                                        <input type="checkbox" id="IsVisible" class="k-checkbox" name="IsVisible">
                                        <label class="k-checkbox-label" for="IsVisible">Sub Outcome group</label>
                                    </li>
                                </ul>
                            </div>

                        </div>
                        <div class="row">
                            <div class="form-group titleqgroup">
                                <div class="col-md-12">
                                    <label>Title</label>
                                    @Html.TextBoxFor(x => x.Title, new { @class = "form-control", @style = "width:47%;", @readonly = "readonly" })
                                </div>

                            </div>
                            <div class="form-group drpmaster">
                                <div class="col-md-12">
                                    <label>Group Name</label>
                                    @Html.DropDownListFor(x => x.coderef, _icisDataProvider.GetGroupcode(), "...", new { @class = "form-control", @style = "width:47%;" })
                                </div>

                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <label>Description</label>
                                    @Html.TextAreaFor(x => x.Description, new { @class = "form-control", @style = "width:47%;"  })
                                    @Html.ValidationMessageFor(x => x.Description)
                                </div>

                            </div>
                        </div>
                        <hr />
                        <p>Provide Additional Information</p>
                        <div class="row">
                            <div class="form-group titleqgroup">
                                <div class="col-md-12">
                                    <label>Additional Information</label>
                                    @Html.TextAreaFor(x => x.AdditionalDescription, new { @class = "form-control", @style = "width:100%;" })
                                </div>

                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <label>Upload File</label>
                                    <input type="file" name="files" id="files"/>
                                </div>

                            </div>
                            
                        </div>

                    </div>
                    <div class="modal-footer">

                        <button type="button" class="btn btn-brilliance btnsave">Save and Close</button>

                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                       
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div id="grid"></div>
        </div>

    </div>

</form>




@section scripts{
  <script src="~/Scripts/jszip.min.js"></script>
<script src="~/Scripts/kendo.all.min.js"></script>
<script src="~/Scripts/bootstrapvalidator.min.js"></script>

    <script>

        function SaveResponse(response) {
            alert(response)
            if (response.IsSuccess) {
                SetMessageForPageLoad(response.Message, "OutcomeSaved");
                location.reload();
                 
            } else {
                ShowMessage(response.Message, "error");
                location.reload();
            }
        }
    </script>
    <script>
        $(document).ready(function () {

            $(".drpmaster").hide();
            BindGrid();
            //BindCode();
        });
    </script>
    <script>
        $('input[type="checkbox"]').click(function () {
            if ($(this).prop("checked") == true) {

                var url = '@Url.Action("getgroupcount", "CIS")';
                $.ajax({
                    url: url,
                    method: 'post',
                    data: {},
                    success:function (data)
                    {
                        debugger;
                        if(data==0)
                        { 
                         
                            $('input[name=IsVisible]').attr('checked', false);
                            $('input[name=IsVisible]').attr('value', 0);
                            $(".drpmaster").hide();
                        }
                        else {
                           
                           

                            $("#msgcs").hide();
                            $(".drpmaster").show();
                            $('input[name=IsVisible]').attr('checked', true);
                            $('input[name=IsVisible]').attr('value', 1);
                        }
                    }
                });
            }
            else if ($(this).prop("checked") == false) {
                $(".titleqgroup").show();
                $(".drpmaster").hide();
            }
        })
      
</script>

    

    <script>
        function BindGrid() {

            var url = '@Url.Action("TCFOutcomeList", "CIS")';

            var element = $("#grid").kendoGrid({
                dataSource: {

                    transport: {
                        read: {
                            url: url,
                            type: "get",
                            dataType: "json"
                        }
                    },
                    
                    groupable: false,
                    sortable: false,
                    pageSize: 10,
                    serverPaging: false,
                    serverSorting: false
                },

                sortable: false,
                pageable: true,
                scrollable: true,
                /// detailInit: detailInit,
                dataBound: function () {
                    var grid = this;
                    $(".k-grouping-row").each(function (e) {
                        grid.collapseGroup(this);
                    });
                    ////this.expandRow(this.tbody.find("tr.k-master-row").last());
                },


                columns: [
                    {
                        title: "Id",
                        field: "GroupId",
                        hidden:true,
                        width: "4%"
                    },
                    {
                        field: "Title",
                        title: "Title",
                        width: "10%"
                    },
                    {
                        title: "Description",
                        field: "Description",
                        width: "70%"
                    },
                    
                    
                    {


                        'title': 'Action',
                        template: "<a href='\\\#' class='name-link btn btn-default' value='#= GroupId #'>#= 'Edit' #</a>",

                    },
                     {


                        
                         template: "<a href='\\\#' class='Id-link btn btn-default' value='#= GroupId #'>#= 'Delete' #</a>",

                     },
                ]

            }).on("click", "a.name-link", function () {
                var tr = $(this).closest("tr");

                var dataItem = $("#grid").data("kendoGrid").dataItem(tr);
                var id = dataItem.GroupId;
                var url = '@Url.Action("GetoutcomeById", "CIS")';
                ShowLoader();
                $.ajax({
                    url: url,
                    method: 'post',
                    data: { Id: id },
                    success:function(data)
                    {
                        HideLoader();
                        $("#frmoutcome").trigger("reset");
                        $('#exampleModalLong').modal('show');
                        $("#Code").val(data.Code);
                        $("#IsEdit").val(true);
                        $("#GroupId").val(data.GroupId);
                        $("#HoldingEntityId").val(data.HoldingEntityId.toUpperCase());
                        $("#Title").val(data.Title)
                        $("#Description").val(data.Description)
                        if(data.IsVisible==false)
                        {
                            $('input[name=IsVisible]').attr('checked', true);
                           
                           
                            $(".drpmaster").show();
                            $("#coderef").val(data.Code.toUpperCase());
                        }
                        else if(data.IsVisible==true)
                        {
                            $('input[name=IsVisible]').attr('checked', false);
                            $(".titleqgroup").show();

                            $(".drpmaster").hide();
                            
                        }
                        $("#AdditionalDescription").val(data.AdditionalDescription)
                        $("#Filename").val(data.Filename)
                        BINDDIVISION(data.HoldingEntityId.toUpperCase(), data.DivisionId)
                    }
                });

            }).on("click", "a.Id-link", function () {
                var tr = $(this).closest("tr");
                var dataItem = $("#grid").data("kendoGrid").dataItem(tr);
                var id = dataItem.GroupId;
                var url = '@Url.Action("DeleteoutcomeMaster", "CIS")';
                ShowLoader();
                $.ajax({
                    url: url,
                    method: 'post',
                    data: { Id: id },
                    success: function (data) {
                        debugger;
                        HideLoader();
                        
                        if (data.IsSuccess == true)
                        {
                            ShowMessage(data.Message);
                            BindGrid();
                            location.reload();
                        }
                        else if (data.IsSuccess == false)
                        {
                            BindGrid();
                            ShowMessage(data.Message, "error");
                            location.reload();
                        }
                        
                        
                      
                    }
                });
            });

        }

  </script> 

   
    <script>
        var selDiv = "";
        var storedFiles = [];
        var data = new FormData();
        $(document).ready(function () {
            $("#files").on("change", handleFileSelect);

            selDiv = $("#selectedFiles");
            $("#myForm").on("submit", handleForm);


            //$("tblimage").on("click", ".selFile", removeFile);
        });

        function handleFileSelect(e) {

            var files = e.target.files;
            var filesArr = Array.prototype.slice.call(files);
            filesArr.forEach(function (f) {

                //if(!f.type.match("image.*")) {
                //	return;
                //}
                storedFiles.push(f);

                var reader = new FileReader();


                reader.onload = function (e) {
                    //var image = "<tr><td>" + f.name + "</td><td><input type='button' style='padding: 2px;float: right;'class='btn btn-default del' data-file='" + f.name + "' id='delete'  value='remove'/></td></tr>";
                    //$(table).append(image);
                    //var html = "<div><img src=\"" + e.target.result + "\" data-file='"+f.name+"' class='selFile' title='Click to remove'>" + f.name + "<br clear=\"left\"/></div>";


                }
                //selDiv.append(table);
                reader.readAsDataURL(f);
                data.append('files', f);

            });

        }
        function handleForm(e) {
            e.preventDefault();


            var xhr = new XMLHttpRequest();
            xhr.open('POST', 'handler.cfm', true);

            xhr.onload = function (e) {
                if (this.status == 200) {
                    console.log(e.currentTarget.responseText);
                    alert(e.currentTarget.responseText + ' items uploaded.');
                }
            }

            xhr.send(data);
        }

        $(".btnsave").click(function () {
            debugger;
            Validate();
            var cheked;
            var validator = $('#frmoutcome').data('bootstrapValidator');
            if($('input[name=IsVisible]').prop("checked") == true)
            {
                cheked =true;
            }
            else
            {
                cheked =false;
            }
           
           
            validator.validate();
            if (validator.isValid()) {
                var TCFQuestionGroup = {
                    GroupId: $("#GroupId").val(),
                    HoldingEntityId: $("#HoldingEntityId").val(),
                    Code: $("#Code").val(),
                    IsVisible: cheked,
                    Title: $("#Title").val(),
                    Description: $("#Description").val(),
                    coderef: $("#coderef").val(),
                    IsEdit: $("#IsEdit").val(),
                    AdditionalDescription: $("#AdditionalDescription").val(),
                    DivisionId: $("#DivisionId").val(),
                    file: files
                }
                var formdata = new FormData($('#frmoutcome').get(0));
                for (var i = 0, len = storedFiles.length; i < len; i++) {
                    debugger;
                    formdata.append("file", storedFiles[i]);
                }
            
                var url = '@Url.Action("SaveOutcome", "CIS")';
                ShowLoader();
                $.ajax({
                    url: url,
                    method: 'post',
                    data: formdata,
                    contentType: false,
                    cache: false,
                    processData: false,
                    success: function (data) {
                        BindGrid();
                        HideLoader();
                        debugger;
                        $("#frmoutcome").trigger("reset");
                        $('#exampleModalLong').modal('hide');
                        ///BindCode();
                        ShowMessage(data.Message);
                        location.reload();
                    },
                    failure: function (ex) {
                        BindGrid();
                        ShowMessage(data.Message, "error");
                        location.reload();
                    }
                });
            }
            else
            {
                return false;
            }
        });

        function Validate()
        {
            var validator = $("#frmoutcome").bootstrapValidator({
                feedbackIcons: {
                    valid: "glyphicon glyphicon-ok",
                    validating: "glyphicon glyphicon-refresh"
                },
                fields: {
                    HoldingEntityId: {
                        message: "Please select Entity...",
                        validators: {
                            notEmpty: {
                                message: "Please select Entity..."
                            }
                        }
                    },
                    
                    DivisionId: {
                        message: "Please Select Division...",
                validators: {
                    notEmpty: {
                        message: "Please Select Division..."
                    }
                }
            },
                    Code: {
                        message: "Please Enter Code...",
                        validators: {
                            notEmpty: {
                                message: "Please Enter Code..."
                            }
                        }
                    },
               
                
                    Description: {
                        message: "Please provide outcome description..",
                        validators: {
                            notEmpty: {
                                message: "Please prvide outcome description.."
                            }
                        }
                    }
                }
            });
        }
    </script>
     <script>
    $("#coderef").on('change', function () {
        var currentval = $("#coderef").val();
        var EntityId = $("#HoldingEntityId").val();
        if(currentval>0)
        {
            $("#Code").val(currentval)
            var url = '@Url.Action("GrupcntByEntity", "CIS")';
            $.ajax({
                url: url,
                method: 'post',
                data: { Id: currentval, EntityId: EntityId },
                success: function (data) {
                    $("#Code").val(currentval);
                    
                    var cde ='Outcome '+currentval + data +':';
                    $("#Title").val(cde);
                }
            })
        }
        else if(currentval==0)
        {
            $("#Code").val(@Html.Raw(Json.Encode(ViewBag.cd)))
        }


    })
</script>
     <script>
         $("#HoldingEntityId").on('change', function () {
             var url = '@Url.Action("MasterCont", "CIS")';
             $.ajax({
                 url: url,
                 method: 'get',
                 data: { EntityId: $("#HoldingEntityId").val()},
                 success: function (data) {
                     debugger;
                     $("#Code").val(data.response);
                     $("#Title").val(data._response);
                     if (data.lst.length > 0)
                     {
                         $("#DivisionId").empty();
                         $("#DivisionId").append($("<option></option>").val(null).html('Select Division'));

                         $.each(data.lst, function (data, value) {

                             $("#DivisionId").append($("<option></option>").val(value.Value).html(value.Text));
                         })
                     }

                 }
             })
         })

         function BINDDIVISION(company,divid)
         {
             var url = '@Url.Action("GetDivision", "CIS")';
             $.ajax({
                 url: url,
                 method: 'get',
                 data: { CompanyId: company },
                 success: function (data) {
                     debugger;
                   
                     if (data.length > 0) {
                         $("#DivisionId").empty();
                         $("#DivisionId").append($("<option></option>").val(null).html('Select Division'));

                         $.each(data, function (data, value) {

                             $("#DivisionId").append($("<option></option>").val(value.Value).html(value.Text));
                         })
                         $("#DivisionId").val(divid);
                     }

                 }
             })

         }
  </script>
    }

