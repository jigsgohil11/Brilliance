@using Brilliance.Infrastructure.DataProvider;
@model Brilliance.Models.Entity.TCFQuestion
@{
    ViewBag.Title = "SuboutComes";
    Layout = "~/Views/Shared/_Layout_public.cshtml";
    ConductDataprovider _icisDataProvider = new ConductDataprovider();

}
<link href="~/Content/kendoStyles.css" rel="stylesheet" />
<link rel="stylesheet" href="https://app.brillianceib.com/bundles/knockout?v=mKy6cxTu1mioyNO6m4RTtIqEAZBgJ9YqLsg1ixYmtsM1" />
<link rel="stylesheet" href="https://app.brillianceib.com/bundles/bootstrap?v=B9gEIvl-BkYgXVSg8Ql9co87zoQ4x1JR0IJEM-Rbbx01" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

<style>
    #grid {
        margin: 0;
        padding: 0;
        border-width: 0;
        height: 100%;
        /* DO NOT USE !important for setting the Grid height! */
    }

    .fieldlist {
        margin: 0 0 -1em;
        padding: 0;
        padding-left: 3%;
    }

        .fieldlist li {
            list-style: none;
            padding-bottom: 1em;
        }
        .help-block{
           
    background: red;
    color: white;
    padding: 2px 2px 3px;
    width: 70%;

        }
</style>
<form id="frmsuboutcome" novalidate>
    <div class="page-content page-content-dashbrd-backgrnd">
        <div class="page-bar margin-bottom-10">
            <div class="row">
                <div class="col-md-12 padding-out">
                    <div class="portlet light padding-header margin-0 custom-padding-bar">
                        <div class="portlet-title portlet-title-Project-custom">
                            <div class="caption font-dark">
                                <i class="icon-settings font-dark"></i>
                                <span class="caption-subject bold uppercase"> Sub outComes Master</span>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <button type="button" class="btn btn-brilliance btn-sm" data-toggle="modal" data-target="#exampleModalLong">
            Add New
        </button>
        <div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLongTitle">Add Details...</h5>

                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="row">

                            <div class="col-md-12">

                                <div class="col-md-6" style="padding-left: 0%;">
                                    <label>Select  Entity</label>


                                    @Html.DropDownListFor(x => x.BinderHolderTypeId, _icisDataProvider.Bindclient(),"Select", new { @class = "form-control", @style = "width:70%;" })
                                    @Html.ValidationMessageFor(x => x.BinderHolderTypeId)

                                </div>

                                <div class="col-md-6">
                                    <label>Question Type</label>
                                    @Html.DropDownListFor(x => x.TCFQuestionTypeId, _icisDataProvider.GetQuiztype(), "Select", new { @class = "form-control", @style = "width:70%;" })
                                    @Html.ValidationMessageFor(x => x.TCFQuestionTypeId)

                                </div>



                            </div>
                            <br />
                            <div class="row">

                                <div class="col-md-12">
                                    <div class="col-md-6">
                                        <label>Select  Group</label>


                                        @Html.DropDownListFor(x => x.TCFQuestionGroupId, new List<SelectListItem> { new SelectListItem { Text = "", Value = null } }, new { @class = "form-control", @style = "width:70%;" })
                                        @Html.ValidationMessageFor(x => x.TCFQuestionGroupId)

                                    </div>
                                    <div class="col-md-6">
                                        <label> Code</label>
                                        @Html.TextBoxFor(x => x.Code, new { @class = "form-control", @style = "width:70%;", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(x => x.Code)
                                        @Html.HiddenFor(x => x.Id)
                                        @Html.HiddenFor(x => x.IsEdit)
                                    </div>
                                </div>



                            </div>
                            <br />
                            <div class="row" style="padding-left:3%;">

                                <div class="col-md-12">

                                    <label>Description</label>


                                    @Html.TextAreaFor(x => x.Description, new { @class = "form-control", @style = "width:100%;" })
                                    @Html.ValidationMessageFor(x => x.Description)
                                </div>



                            </div>
                            <div class="row" style="padding-left:3%;">

                                <div class="col-md-12">

                                    <label>Guidance Description</label>


                                    @Html.TextAreaFor(x => x.GuidanceDescription, new { @class = "form-control", @style = "width:100%;" })
                                    @Html.ValidationMessageFor(x => x.GuidanceDescription)
                                </div>



                            </div>
                            <br />
                            <div class="row" style="padding-left:3%;">
                                <div class="form-group">
                                    <ul class="fieldlist">
                                        <li>
                                            <input type="checkbox" id="IsStandard" class="k-checkbox" name="IsStandard">
                                          
                                            <label class="k-checkbox-label" for="IsStandard">Standard</label>
                                        </li>
                                    </ul>
                                </div>

                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-brilliance btnsave">Save and Close</button>

                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
            

        </div>
        <div class="row">
            <div id="grid"></div>
        </div>
    </div>
</form>

@section scripts{

    <script src="https://kendo.cdn.telerik.com/2018.2.620/js/jszip.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2018.2.620/js/kendo.all.min.js"></script>

    <script src="~/Scripts/bootstrapvalidator.min.js"></script>

<script>
        $(document).ready(function () {
           
            BindGrid();
        });
</script>
   <script>
       $("#BinderHolderTypeId").on('change', function () {

           var url = '@Url.Action("Bindgroup", "CIS")';
           $.ajax({
               url: url,
               method: 'post',
               data: { Id: $("#BinderHolderTypeId").val() },
               success: function (data) {
                   $('#TCFQuestionGroupId').find('option').remove();
                   $('#TCFQuestionGroupId').append($('<option></option>').val(null).html('...'));

                   $(data).each(function (index, item) { // GETTING ERROR HERE
                       debugger;

                       $('#TCFQuestionGroupId').append($('<option></option>').val(item.Value).html(item.Text));
                   });
               }
           })

       });

    </script>

    
    <script>
        $(".btnsave").on('click', function () {
            Validate();
            debugger;
            var validator = $('#frmsuboutcome').data('bootstrapValidator');
            validator.validate();
            if (validator.isValid()) {
                var TCFQuestion = {
                    Id: $("#Id").val(),
                    BinderHolderTypeId: $("#BinderHolderTypeId").val(),
                    TCFQuestionTypeId: $("#TCFQuestionTypeId").val(),
                    TCFQuestionGroupId: $("#TCFQuestionGroupId").val(),
                    Code: $("#Code").val(),
                    Description: $("#Description").val(),
                    GuidanceDescription: $("#GuidanceDescription").val(),
                    IsStandard: $("#IsStandard").prop('checked'),
                    IsEdit: $("#IsEdit").val()
                }
                var url = '@Url.Action("SavesubOutcome", "CIS")';
                ShowLoader();
                $.ajax({
                    url: url,
                    method: 'post',
                    data: JSON.stringify(TCFQuestion),
                    dataType: 'json',
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        BindGrid();
                        HideLoader();
                        ShowMessage(data.Message);

                        $('#exampleModalLong').modal('hide');
                        $("#frmsuboutcome").trigger("reset");
                    },
                    failure: function (ex) {
                        BindGrid();
                        ShowMessage(data.Message, "error");

                    }
                });
            }
            else {
               
                return false;
            }
        });

      

    </script>
   <script>
       function Validate() {
           var validator = $("#frmsuboutcome").bootstrapValidator({
               feedbackIcons: {
                   valid: "glyphicon glyphicon-ok",
                   validating: "glyphicon glyphicon-refresh"
               },
               fields: {
                   BinderHolderTypeId: {
                       message: "Please select Entity...",
                       validators: {
                           notEmpty: {
                               message: "Please select Entity..."
                           }
                       }
                   },
               
                   TCFQuestionGroupId: {
                       message: "Please provide outcome group..",
                       validators: {
                           notEmpty: {
                               message: "Please provide outcome group.."
                           }
                       }
                   },
                   
                       TCFQuestionTypeId: {
                           message: "Please provide Question Type..",
                           validators: {
                               notEmpty: {
                                   message: "Please provide Question Type.."
                               }
                           }
                       },
                       Code: {
                           message: "Please provide Code..",
                           validators: {
                               notEmpty: {
                                   message: "Please provide Code.."
                               }
                           }
                       },
                  
                  
                       Description: {
                           message: "Please provide Description..",
                           validators: {
                               notEmpty: {
                                   message: "Please provide Description.."
                               }
                           }
                       },
                   
                 
                       GuidanceDescription: {
                           message: "Please provide Guidance for Description..",
                           validators: {
                               notEmpty: {
                                   message: "Please provide Guidance for Description.."
                               }
                           }
                       }
                   
               }
           });
       }
    </script>

<script>
        $('input[type="checkbox"]').click(function () {
            if ($(this).prop("checked") == true) {

                $('input[name=IsStandard]').attr('checked', true);
                $('input[name=IsStandard]').attr('value', 1);
            }
            else if ($(this).prop("checked") == false) {
                $('input[name=IsStandard]').attr('checked', true);
                $('input[name=IsStandard]').attr('value', 1);
            }
        })

</script>

<script>
        function BindGrid() {

            var url = '@Url.Action("QuestionList", "CIS")';
            var element = $("#grid").kendoGrid({
                dataSource: {

                    transport: {
                        read: {
                            url: url,
                            type: "get",
                            dataType: "json"
                        }
                    },

                   
                    pageSize: 10,
                    serverPaging: false,
                    
                },

                
                pageable: true,
                scrollable: true,
                /// detailInit: detailInit,
                

                columns: [
                    {
                        title: "Code",
                        field: "Code",
                        
                        width: "5%"
                    },
                    {
                        field: "GroupName",
                        title: "Group",
                        width: "10%"
                    },
                    {
                        title: "Description",
                        field: "Description",
                        width: "70%"
                    },


                    {


                        'title': 'Action',
                        template: "<a href='\\\#' class='name-link btn btn-default' value='#=Id #'>#= 'Edit' #</a>",

                    },
                     {



                         template: "<a href='\\\#' class='name-link btn btn-default' value='#=Id #'>#= 'Delete' #</a>",

                     },
                ]

            }).on("click", "a.name-link", function () {
                var tr = $(this).closest("tr");

                var dataItem = $("#grid").data("kendoGrid").dataItem(tr);
                var id = dataItem.Id;
                var url = '@Url.Action("GetTCFQuestionById", "CIS")';
                ShowLoader();
                $.ajax({
                    url: url,
                    method: 'post',
                    data: { Id: id },
                    success:function(data)
                    {
                        HideLoader();
                        $('#exampleModalLong').modal('show');
                        $("#Code").val(data.Code);
                        $("#IsEdit").val(true);
                        $("#Id").val(data.Id);
                        $("#BinderHolderTypeId").val(data.BinderHolderTypeId.toUpperCase());
                        BindEditDrpdwn(data.BinderHolderTypeId, data.TCFQuestionGroupId)
                        $("#TCFQuestionTypeId").val(data.TCFQuestionTypeId.toUpperCase());
                        $("#GuidanceDescription").val(data.GuidanceDescription);
                        $("#Description").val(data.Description)
                        if (data.IsStandard == true)
                        {
                            $('input[name=IsStandard]').attr('checked', true);
                           
                            $("#coderef").val(data.Code.toUpperCase());
                        }
                        else if (data.IsStandard == false)
                        {
                            $('input[name=IsStandard]').attr('checked', false);
                           

                        }
                    }
                });

            });

        }

</script>
<script>
    function BindEditDrpdwn(Id,Selected)
    {
       
        var url = '@Url.Action("Bindgroup", "CIS")';
        $.ajax({
            url: url,
            method: 'post',
            data: { Id: Id },
            success: function (data) {
                $('#TCFQuestionGroupId').find('option').remove();
                $('#TCFQuestionGroupId').append($('<option></option>').val(null).html('...'));

                $(data).each(function (index, item) { // GETTING ERROR HERE
                    debugger;

                    $('#TCFQuestionGroupId').append($('<option></option>').val(item.Value).html(item.Text));
                });
                $("#TCFQuestionGroupId").val(Selected.toUpperCase());
            }
        })
    }

    </script>
    <script>
        $("#TCFQuestionGroupId").on('change', function () {
            var currentval = $("#TCFQuestionGroupId").val();
          
            var url = '@Url.Action("GetSuboutcomeCode", "CIS")';
            $.ajax({
                url: url,
                method: 'post',
                data: { Id: currentval },
                success: function (data) {
                    $("#Code").val(data);
                }
            })

        });
</script>




    
}