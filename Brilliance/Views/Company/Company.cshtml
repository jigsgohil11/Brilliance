@using Brilliance.Infrastructure
@model Brilliance.Models.ViewModel.CompanyViewModel
@{
    ViewBag.Title = "Company";
    Layout = "~/Views/Shared/_Layout_public.cshtml";
}
<link href="~/assets/global/plugins/bootstrap-datepicker/css/bootstrap-datepicker.min.css" rel="stylesheet" />
<style>
    .floatClass {
        float: left;
        margin-bottom: 10px;
    }

    .capright {
        float: right;
        display: inline-block;
        font-size: 18px;
        line-height: 18px;
        padding: 5px 0;
    }
</style>
<div class="page-content page-content-dashbrd-backgrnd">
    <div class="row">
        <div class="col-md-12">
            <div class="page-bar margin-bottom-10">
                <div class="row">
                    <div class="col-md-12 padding-out">
                        <div class="portlet light padding-header margin-0 custom-padding-bar">
                            <div class="portlet-title portlet-title-Project-custom">
                                <div class="caption font-dark">
                                    <i class="icon-settings font-dark"></i>
                                    <span class="caption-subject bold uppercase">Company</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row" style="margin-left:-25px;margin-right:-25px;margin-top:-5px;">
                <div class="col-lg-12">
                    <div class="portlet light">
                        <div class="portlet-body form">
                            <form id="frmcompany" action="/Company/SaveCompany" method="post" data-ajax="true" data-ajax-method="Post" data-ajax-success="SaveCompanyResponse(data);">
                                @Html.HiddenFor(m => m.company.CompanyID)
                                @*<div class="row">
                                                                    <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Code</label>
                                                    @Html.TextBoxFor(m => m.company.CompanyCode, new { @class = "form-control m-input", @placeholder = "Enter company code" })
                                                    @Html.ValidationMessageFor(m => m.company.CompanyCode)

                                                </div>
                                            </div>
                                    </div>*@
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Organization<span style="font-weight: bold;color: red;">*</span></label>
                                            @Html.DropDownListFor(m => m.company.ClientID, new SelectList(Model.ClientList, "Value", "Text", 0), "--Select Organization--", new { @data_live_search = "true", @class = "form-control bs-select" })
                                            @Html.ValidationMessageFor(m => m.company.ClientID)
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Company Name</label>
                                            @Html.TextBoxFor(m => m.company.CompanyName, new { @class = "form-control m-input", @placeholder = "Enter company name" })
                                            @Html.ValidationMessageFor(m => m.company.CompanyName)
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Industry<span style="font-weight: bold;color: red;">*</span></label>
                                            @Html.DropDownListFor(m => m.company.IndustryID, new SelectList(Model.IndustryList, "Value", "Text", 0), "--Select Industry--", new { @data_live_search = "true", @class = "form-control bs-select" })
                                            @Html.ValidationMessageFor(m => m.company.CompanyCode)
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Sector<span style="font-weight: bold;color: red;">*</span></label>
                                            @Html.DropDownListFor(m => m.company.SectorID, new SelectList(Model.SectorList, "Value", "Text", 0), "--Select Sector--", new { @data_live_search = "true", @class = "form-control bs-select" })
                                            @Html.ValidationMessageFor(m => m.company.CompanyName)
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Primary Contact Name</label>
                                            @Html.TextBoxFor(m => m.company.ContactPersonName, new { @class = "form-control m-input", @placeholder = "Enter contact person name" })
                                            @Html.ValidationMessageFor(m => m.company.ContactPersonName)
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Primary Contact No</label>
                                            @Html.TextBoxFor(m => m.company.MobileNo, new { @class = "form-control m-input", @placeholder = "Enter Mobile No" })
                                            @Html.ValidationMessageFor(m => m.company.MobileNo)
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Primary Email ID</label>
                                            @Html.TextBoxFor(m => m.company.Email, new { @class = "form-control email m-input", @placeholder = "Enter Email" })
                                            @Html.ValidationMessageFor(m => m.company.Email)
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Secondary Contact Name</label>
                                            @Html.TextBoxFor(m => m.company.SecondaryContactName, new { @class = "form-control m-input", @placeholder = "Enter secondary contact name" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Secondary Contact No</label>
                                            @Html.TextBoxFor(m => m.company.SecondaryContactNo, new { @class = "form-control m-input", @placeholder = "Enter secondary contact no" })
                                            @Html.ValidationMessageFor(m => m.company.SecondaryContactNo)
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Secondary Email ID</label>
                                            @Html.TextBoxFor(m => m.company.SecondaryEmail, new { @class = "form-control m-input", @placeholder = "Enter secondary email" })
                                            @Html.ValidationMessageFor(m => m.company.SecondaryEmail)
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label>Unit No</label>
                                            @Html.TextBoxFor(m => m.company.UnitNo, new { @class = "form-control m-input", @placeholder = "Enter Unit No" })
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        <div class="form-group">
                                            <label>Complex</label>
                                            @Html.TextBoxFor(m => m.company.Complex, new { @class = "form-control m-input", @placeholder = "Enter Complex details" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label>Street/Farm No</label>
                                            @Html.TextBoxFor(m => m.company.StreetNo, new { @class = "form-control m-input", @placeholder = "Enter Street/Farm No" })
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        <div class="form-group">
                                            <label>Street/Farm</label>
                                            @Html.TextBoxFor(m => m.company.Street, new { @class = "form-control m-input", @placeholder = "Enter Street/Farm details" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Web URL</label>
                                            @Html.TextBoxFor(m => m.company.WebURL, new { @class = "form-control m-input", @placeholder = "Enter Web URL" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Address<span style="font-weight: bold;color: red;">*</span></label>
                                            @Html.TextAreaFor(m => m.company.Address, new { @class = "form-control m-input", @placeholder = "Enter Address" })
                                            @Html.ValidationMessageFor(m => m.company.Address)
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label>Country<span style="font-weight: bold;color: red;">*</span></label>
                                            @Html.DropDownListFor(m => m.company.Country, new SelectList(Model.Countrylist, "Value", "Text", 0), "--Select Country--", new { @data_live_search = "true", @class = "form-control bs-select", @onchange = "GetState(this);" })
                                            @Html.ValidationMessageFor(m => m.company.Country)
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label>State<span style="font-weight: bold;color: red;">*</span></label>
                                            @Html.DropDownListFor(m => m.company.State, new SelectList(Model.StateList, "Value", "Text", 0), new { @data_live_search = "true", @class = "form-control bs-select", @onchange = "GetCity(this);" })
                                            @Html.ValidationMessageFor(m => m.company.State)
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label>City<span style="font-weight: bold;color: red;">*</span></label>
                                            @Html.DropDownListFor(m => m.company.City, new SelectList(Model.CityList, "Value", "Text", 0), new { @data_live_search = "true", @class = "form-control bs-select" })
                                            @Html.ValidationMessageFor(m => m.company.City)
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label>Description</label>
                                            @Html.TextAreaFor(m => m.company.Description, new { @class = "form-control m-input", @placeholder = "Enter Description", @rows = "4" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>View Level of Dissatisfaction</label>
                                            @Html.CheckBoxFor(m => m.company.IsViewDissatisfationLevel, new { @class = "form-control m-input" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Require Level of Dissatisfaction</label>
                                            @Html.CheckBoxFor(m => m.company.IsRequireDissatisfationLevel, new { @class = "form-control m-input" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>View Level of Satisfaction</label>
                                            @Html.CheckBoxFor(m => m.company.IsViewSatisfationLevel, new { @class = "form-control m-input" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Require Level of Satisfaction</label>
                                            @Html.CheckBoxFor(m => m.company.IsRequireSatisfationLevel, new { @class = "form-control m-input" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-actions">
                                    <div class="col-lg-12  text-right">
                                        <button type="button" onclick="location.href = '/Company/CompanyList'" class="btn default">Cancel</button>
                                        <button type="submit" class="btn btn-primary btnSubmit">Save</button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script>

        function SaveCompanyResponse(response) {

            if (response.IsSuccess) {
                SetMessageForPageLoad(response.Message, "Companysaved");
                window.location.href = "/Company/CompanyList/";
            } else {
                ShowMessage(response.Message, "error");
            }
        }
        function GetState(Obj) {
            //var index = $(Obj).attr('index');
            var countryVal = $('#' + Obj.id).val();
            var postData = { cid: countryVal };
            ShowLoader();
            AjaxCall("/Organization/GetStateByCountry", JSON.stringify(postData), "post", "json", "application/json", false).done(function (data) {
                HideLoader();
                //if (data == "_Logon_") {
                //    window.location.href = "/Login/Login";
                //}
                if (data != null && data.length > 0) {
                    $("#company_State").html('');
                    $("#company_State").append('<option value="">-- Select State --</option>');
                    $("#company_State").selectpicker('refresh');
                    for (key in data) {
                        $("#company_State").append('<option value="' + data[key].Value + '">' + data[key].Text + '</option>')
                    }
                    $("#company_State").selectpicker('refresh');
                }
                else {
                    $("#company_State").html('');
                    $("#company_State").append('<option value="">-- Select State --</option>');
                    $("#company_State").selectpicker('refresh');
                }
            });
        }

        function GetCity(Obj) {
            //var index = $(Obj).attr('index');
            var stateVal = $('#' + Obj.id).val();
            var postData = { sid: stateVal };
            ShowLoader();
            AjaxCall("/Organization/GetCityByState", JSON.stringify(postData), "post", "json", "application/json", false).done(function (data) {
                HideLoader();
                //if (data == "_Logon_") {
                //    window.location.href = "/Login/Login";
                //}
                if (data != null && data.length > 0) {
                    $("#company_City").html('');
                    $("#company_City").append('<option value="">-- Select City --</option>');
                    $("#company_City").selectpicker('refresh');
                    for (key in data) {
                        $("#company_City").append('<option value="' + data[key].Value + '">' + data[key].Text + '</option>')
                    }
                    $("#company_City").selectpicker('refresh');
                }
                else {
                    $("#company_City").html('');
                    $("#company_City").append('<option value="">-- Select City --</option>');
                    $("#company_City").selectpicker('refresh');
                }
            });
        }
    </script>
}
